DIGEST 193f8d536d3e71a9ab313af6f304adee
FVCC.AssertionSemantics
R35:52 Coq.MSets.MSetPositive <> <> lib
R89:99 Coq.MSets.MSetPositive PositiveSet <> modtype
mod 82:85 <> PSet
R147:167 Coq.Classes.Morphisms <> <> lib
R186:205 Coq.Relations.Relation_Definitions <> <> lib
R224:242 compcert.lib.Coqlib <> <> lib
R260:280 compcert.lib.Integers <> <> lib
R298:314 compcert.lib.Maps <> <> lib
R334:348 VCC.Environment <> <> lib
R366:373 VCC.Heap <> <> lib
R391:400 VCC.Basics <> <> lib
R418:432 VCC.Expressions <> <> lib
prf 442:458 <> forall_exists_iff
R477:480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R476:476 VCC.AssertionSemantics <> A var
R492:492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R514:518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R519:519 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R533:539 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R553:553 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R520:526 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R528:529 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R530:530 VCC.AssertionSemantics <> P var
R532:532 VCC.AssertionSemantics <> x var
R540:546 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R548:549 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R550:550 VCC.AssertionSemantics <> Q var
R552:552 VCC.AssertionSemantics <> x var
R506:510 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R503:503 VCC.AssertionSemantics <> P var
R505:505 VCC.AssertionSemantics <> x var
R511:511 VCC.AssertionSemantics <> Q var
R513:513 VCC.AssertionSemantics <> x var
def 827:834 <> val_type
R839:842 VCC.Expressions <> heap syndef
R847:849 VCC.Basics <> val ind
R855:858 VCC.Basics <> type ind
R879:880 VCC.AssertionSemantics <> ty var
R876:876 VCC.AssertionSemantics <> v var
R891:894 VCC.Basics <> Vptr constr
R899:906 VCC.Basics <> Tpointer constr
R931:931 VCC.AssertionSemantics <> h var
R950:953 Coq.Init.Datatypes <> Some constr
R961:968 VCC.AssertionSemantics <> val_type def
R970:970 VCC.AssertionSemantics <> h var
R985:989 VCC.Basics <> Tvoid constr
R997:1000 Coq.Init.Logic <> True ind
R1012:1015 Coq.Init.Datatypes <> None constr
R1020:1024 Coq.Init.Logic <> False ind
R1039:1042 VCC.Basics <> Vint constr
R1047:1050 VCC.Basics <> Tint constr
R1064:1068 Coq.Init.Logic <> False ind
R1064:1068 Coq.Init.Logic <> False ind
def 1087:1095 <> expr_type
R1101:1104 VCC.Expressions <> expr ind
R1109:1111 VCC.Environment <> env def
R1116:1119 VCC.Expressions <> heap syndef
R1125:1128 VCC.Basics <> type ind
R1147:1148 VCC.AssertionSemantics <> ex var
R1159:1168 VCC.Expressions <> Econst_int constr
R1177:1179 Coq.Init.Logic <> :type_scope:x_'='_x not
R1175:1176 VCC.AssertionSemantics <> ty var
R1180:1183 VCC.Basics <> Tint constr
R1189:1196 VCC.Expressions <> Etempvar constr
R1203:1209 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1211:1212 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1230:1233 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1221:1223 Coq.Init.Logic <> :type_scope:x_'='_x not
R1213:1216 VCC.Environment <> find def
R1218:1218 VCC.AssertionSemantics <> e var
R1224:1227 Coq.Init.Datatypes <> Some constr
R1229:1229 VCC.AssertionSemantics <> v var
R1234:1241 VCC.AssertionSemantics <> val_type def
R1247:1248 VCC.AssertionSemantics <> ty var
R1245:1245 VCC.AssertionSemantics <> v var
R1243:1243 VCC.AssertionSemantics <> h var
R1254:1259 VCC.Expressions <> Ederef constr
R1269:1277 VCC.AssertionSemantics <> expr_type def
R1288:1295 VCC.Basics <> Tpointer constr
R1297:1298 VCC.AssertionSemantics <> ty var
R1285:1285 VCC.AssertionSemantics <> h var
R1283:1283 VCC.AssertionSemantics <> e var
inst 1325:1345 <> Proper_expr_type_expr
R1348:1353 Coq.Classes.Morphisms <> Proper class
R1419:1427 VCC.AssertionSemantics <> expr_type def
R1364:1368 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R1356:1363 Coq.Init.Logic <> eq ind
R1378:1382 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R1369:1377 VCC.Environment <> env_equiv def
R1391:1394 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R1383:1390 Coq.Init.Logic <> eq ind
R1403:1407 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R1395:1402 Coq.Init.Logic <> eq ind
R1408:1416 Coq.Init.Logic <> iff def
R1512:1514 VCC.Environment <> env def
R1512:1514 VCC.Environment <> env def
R1545:1548 VCC.Basics <> type ind
R1545:1548 VCC.Basics <> type ind
R1578:1581 VCC.Expressions <> heap syndef
R1578:1581 VCC.Expressions <> heap syndef
def 1702:1710 <> gval_type
R1716:1719 VCC.Basics <> gval ind
R1726:1730 VCC.Basics <> gtype ind
R1752:1754 VCC.AssertionSemantics <> gty var
R1748:1749 VCC.AssertionSemantics <> gv var
R1765:1769 VCC.Basics <> GVnat constr
R1774:1778 VCC.Basics <> GTnat constr
R1782:1787 VCC.Basics <> GVbool constr
R1792:1797 VCC.Basics <> GTbool constr
R1801:1806 VCC.Basics <> GVheap constr
R1811:1816 VCC.Basics <> GTheap constr
R1821:1824 Coq.Init.Logic <> True ind
R1821:1824 Coq.Init.Logic <> True ind
R1821:1824 Coq.Init.Logic <> True ind
R1839:1843 Coq.Init.Logic <> False ind
def 1866:1874 <> uval_type
R1880:1883 VCC.Expressions <> heap syndef
R1889:1892 VCC.Basics <> uval ind
R1899:1903 VCC.Basics <> utype ind
R1926:1927 VCC.AssertionSemantics <> uv var
R1921:1923 VCC.AssertionSemantics <> uty var
R1940:1941 VCC.Basics <> RT constr
R1947:1948 VCC.Basics <> RV constr
R1955:1962 VCC.AssertionSemantics <> val_type def
R1964:1965 VCC.AssertionSemantics <> rh var
R1978:1979 VCC.Basics <> GT constr
R1985:1986 VCC.Basics <> GV constr
R1993:2001 VCC.AssertionSemantics <> gval_type def
R2022:2026 Coq.Init.Logic <> False ind
def 2045:2054 <> gexpr_type
R2061:2065 VCC.Expressions <> gexpr ind
R2070:2072 VCC.Environment <> env def
R2078:2081 VCC.Expressions <> heap syndef
R2088:2091 VCC.Environment <> genv def
R2097:2101 VCC.Basics <> utype ind
R2124:2126 VCC.AssertionSemantics <> gex var
R2120:2121 VCC.AssertionSemantics <> ty var
R2137:2138 VCC.Basics <> RT constr
R2145:2149 VCC.Expressions <> Rexpr constr
R2158:2166 VCC.AssertionSemantics <> expr_type def
R2174:2175 VCC.AssertionSemantics <> rh var
R2172:2172 VCC.AssertionSemantics <> e var
R2185:2186 VCC.Basics <> RT constr
R2193:2203 VCC.Expressions <> GEconst_ptr constr
R2210:2217 VCC.AssertionSemantics <> val_type def
R2223:2226 VCC.Basics <> Vptr constr
R2219:2220 VCC.AssertionSemantics <> rh var
R2239:2240 VCC.Basics <> GT constr
R2247:2257 VCC.Expressions <> GEconst_nat constr
R2264:2272 VCC.AssertionSemantics <> gval_type def
R2275:2279 VCC.Basics <> GVnat constr
R2292:2293 VCC.Basics <> GT constr
R2300:2311 VCC.Expressions <> GEconst_bool constr
R2318:2326 VCC.AssertionSemantics <> gval_type def
R2329:2334 VCC.Basics <> GVbool constr
R2347:2348 VCC.Basics <> GT constr
R2355:2363 VCC.Expressions <> GEtempvar constr
R2370:2376 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2378:2379 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2399:2433 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2390:2392 Coq.Init.Logic <> :type_scope:x_'='_x not
R2380:2383 VCC.Environment <> find def
R2385:2387 VCC.AssertionSemantics <> ghe var
R2393:2396 Coq.Init.Datatypes <> Some constr
R2398:2398 VCC.AssertionSemantics <> v var
R2434:2442 VCC.AssertionSemantics <> uval_type def
R2449:2450 VCC.AssertionSemantics <> ty var
R2447:2447 VCC.AssertionSemantics <> v var
R2444:2445 VCC.AssertionSemantics <> rh var
R2456:2457 VCC.Basics <> RT constr
R2464:2470 VCC.Expressions <> GEderef constr
R2480:2489 VCC.AssertionSemantics <> gexpr_type def
R2505:2506 VCC.Basics <> GT constr
R2509:2517 VCC.Basics <> GTpointer constr
R2500:2502 VCC.AssertionSemantics <> ghe var
R2497:2498 VCC.AssertionSemantics <> rh var
R2495:2495 VCC.AssertionSemantics <> e var
R2537:2541 Coq.Init.Logic <> False ind
inst 2567:2583 <> Proper_gexpr_type
R2598:2603 Coq.Classes.Morphisms <> Proper class
R2682:2691 VCC.AssertionSemantics <> gexpr_type def
R2693:2695 VCC.AssertionSemantics <> gex var
R2615:2619 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2606:2614 VCC.Environment <> env_equiv def
R2628:2632 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2620:2627 Coq.Init.Logic <> eq ind
R2652:2656 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2633:2647 VCC.Expressions <> env_equiv_gexpr def
R2649:2651 VCC.AssertionSemantics <> gex var
R2665:2669 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2657:2664 Coq.Init.Logic <> eq ind
R2670:2678 Coq.Init.Logic <> iff def
def 2728:2742 <> option_val_type
R2748:2751 VCC.Expressions <> heap syndef
R2758:2763 Coq.Init.Datatypes <> option ind
R2765:2767 VCC.Basics <> val ind
R2774:2777 VCC.Basics <> type ind
R2796:2797 VCC.AssertionSemantics <> ov var
R2808:2811 Coq.Init.Datatypes <> Some constr
R2818:2825 VCC.AssertionSemantics <> val_type def
R2832:2833 VCC.AssertionSemantics <> ty var
R2827:2828 VCC.AssertionSemantics <> rh var
R2839:2842 Coq.Init.Datatypes <> None constr
R2847:2850 Coq.Init.Logic <> True ind
def 2872:2888 <> option_uval_utype
R2894:2897 VCC.Expressions <> heap syndef
R2904:2909 Coq.Init.Datatypes <> option ind
R2911:2914 VCC.Basics <> uval ind
R2921:2925 VCC.Basics <> utype ind
R2944:2945 VCC.AssertionSemantics <> ov var
R2956:2959 Coq.Init.Datatypes <> Some constr
R2966:2974 VCC.AssertionSemantics <> uval_type def
R2981:2982 VCC.AssertionSemantics <> ty var
R2976:2977 VCC.AssertionSemantics <> rh var
R2988:2991 Coq.Init.Datatypes <> None constr
R2996:2999 Coq.Init.Logic <> True ind
def 3023:3030 <> bool_val
R3035:3037 VCC.Basics <> val ind
R3043:3046 VCC.Basics <> type ind
R3050:3055 Coq.Init.Datatypes <> option ind
R3057:3060 Coq.Init.Datatypes <> bool ind
R3074:3075 VCC.AssertionSemantics <> ty var
R3072:3072 VCC.AssertionSemantics <> v var
R3086:3089 VCC.Basics <> Vint constr
R3094:3097 VCC.Basics <> Tint constr
R3107:3110 Coq.Init.Datatypes <> Some constr
R3114:3117 Coq.Init.Datatypes <> negb def
R3120:3125 compcert.lib.Integers Int eq def
R3129:3136 compcert.lib.Integers Int zero def
R3153:3156 Coq.Init.Datatypes <> None constr
ind 3202:3210 <> assertion
constr 3216:3220 <> Atrue
constr 3236:3241 <> Afalse
constr 3257:3260 <> Aand
constr 3302:3304 <> Aor
constr 3346:3349 <> Anot
constr 3378:3384 <> Aexists
constr 3422:3429 <> Agexists
constr 3467:3474 <> Adefined
constr 3499:3507 <> Agdefined
constr 3532:3537 <> Aalloc
constr 3562:3573 <> Aupdate_heap
constr 3651:3662 <> Aexists_heap
constr 3691:3701 <> Aequal_heap
constr 3761:3770 <> Aexpr_type
constr 3802:3812 <> Agexpr_type
constr 3846:3852 <> Aref_eq
constr 3885:3887 <> Aeq
R3224:3232 VCC.AssertionSemantics <> assertion ind
R3245:3253 VCC.AssertionSemantics <> assertion ind
R3273:3276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3286:3289 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3290:3298 VCC.AssertionSemantics <> assertion ind
R3277:3285 VCC.AssertionSemantics <> assertion ind
R3264:3272 VCC.AssertionSemantics <> assertion ind
R3317:3320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3330:3333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3334:3342 VCC.AssertionSemantics <> assertion ind
R3321:3329 VCC.AssertionSemantics <> assertion ind
R3308:3316 VCC.AssertionSemantics <> assertion ind
R3362:3365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3366:3374 VCC.AssertionSemantics <> assertion ind
R3353:3361 VCC.AssertionSemantics <> assertion ind
R3393:3396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3406:3409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3410:3418 VCC.AssertionSemantics <> assertion ind
R3397:3405 VCC.AssertionSemantics <> assertion ind
R3388:3392 VCC.Basics <> ident def
R3438:3441 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3451:3454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3455:3463 VCC.AssertionSemantics <> assertion ind
R3442:3450 VCC.AssertionSemantics <> assertion ind
R3433:3437 VCC.Basics <> ident def
R3483:3486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3487:3495 VCC.AssertionSemantics <> assertion ind
R3478:3482 VCC.Basics <> ident def
R3516:3519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3520:3528 VCC.AssertionSemantics <> assertion ind
R3511:3515 VCC.Basics <> ident def
R3546:3549 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3550:3558 VCC.AssertionSemantics <> assertion ind
R3541:3545 VCC.Basics <> ident def
R3582:3585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3591:3594 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3600:3603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3604:3612 VCC.AssertionSemantics <> assertion ind
R3595:3599 VCC.Basics <> ident def
R3586:3590 VCC.Basics <> ident def
R3577:3581 VCC.Basics <> ident def
R3675:3678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3679:3687 VCC.AssertionSemantics <> assertion ind
R3666:3674 VCC.AssertionSemantics <> assertion ind
R3710:3713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3714:3722 VCC.AssertionSemantics <> assertion ind
R3705:3709 VCC.Basics <> ident def
R3778:3781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3786:3789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3790:3798 VCC.AssertionSemantics <> assertion ind
R3782:3785 VCC.Basics <> type ind
R3774:3777 VCC.Expressions <> expr ind
R3821:3824 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3830:3833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3834:3842 VCC.AssertionSemantics <> assertion ind
R3825:3829 VCC.Basics <> utype ind
R3816:3820 VCC.Expressions <> gexpr ind
R3860:3863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3869:3872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3873:3881 VCC.AssertionSemantics <> assertion ind
R3864:3868 VCC.Expressions <> gexpr ind
R3855:3859 VCC.Expressions <> gexpr ind
R3895:3898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3904:3907 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3908:3916 VCC.AssertionSemantics <> assertion ind
R3899:3903 VCC.Expressions <> gexpr ind
R3890:3894 VCC.Expressions <> gexpr ind
R4027:4030 VCC.AssertionSemantics <> Aand constr
not 4019:4019 <> :assert_scope:x_'/\'_x
R4097:4099 VCC.AssertionSemantics <> Aor constr
not 4089:4089 <> :assert_scope:x_'\/'_x
R4171:4174 VCC.AssertionSemantics <> Anot constr
not 4161:4161 <> :assert_scope:'~'_x
R4214:4220 VCC.AssertionSemantics <> Aexists constr
not 4204:4204 <> :assert_scope:'Ex'
R4276:4283 VCC.AssertionSemantics <> Adefined constr
not 4261:4261 <> :assert_scope:'Defined'
R4324:4335 VCC.AssertionSemantics <> Aupdate_heap constr
not 4310:4310 <> :assert_scope:'UPDATE'
R4375:4380 VCC.AssertionSemantics <> Aalloc constr
not 4362:4362 <> :assert_scope:'Alloc'
R4412:4414 VCC.AssertionSemantics <> Aeq constr
not 4404:4404 <> :assert_scope:x_'=='_x
def 4477:4487 <> eval_assert
R4492:4500 VCC.AssertionSemantics <> assertion ind
R4506:4509 VCC.Environment <> renv def
R4515:4518 VCC.Expressions <> heap syndef
R4525:4528 VCC.Environment <> genv def
R4547:4547 VCC.AssertionSemantics <> P var
R4558:4562 VCC.AssertionSemantics <> Atrue constr
R4567:4570 Coq.Init.Logic <> True ind
R4576:4581 VCC.AssertionSemantics <> Afalse constr
R4586:4590 Coq.Init.Logic <> False ind
R4596:4599 VCC.AssertionSemantics <> Aand constr
R4634:4637 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4610:4620 VCC.AssertionSemantics <> eval_assert def
R4631:4633 VCC.AssertionSemantics <> ghe var
R4628:4629 VCC.AssertionSemantics <> rh var
R4625:4626 VCC.AssertionSemantics <> re var
R4638:4648 VCC.AssertionSemantics <> eval_assert def
R4659:4661 VCC.AssertionSemantics <> ghe var
R4656:4657 VCC.AssertionSemantics <> rh var
R4653:4654 VCC.AssertionSemantics <> re var
R4667:4669 VCC.AssertionSemantics <> Aor constr
R4705:4708 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4681:4691 VCC.AssertionSemantics <> eval_assert def
R4702:4704 VCC.AssertionSemantics <> ghe var
R4699:4700 VCC.AssertionSemantics <> rh var
R4696:4697 VCC.AssertionSemantics <> re var
R4709:4719 VCC.AssertionSemantics <> eval_assert def
R4730:4732 VCC.AssertionSemantics <> ghe var
R4727:4728 VCC.AssertionSemantics <> rh var
R4724:4725 VCC.AssertionSemantics <> re var
R4738:4741 VCC.AssertionSemantics <> Anot constr
R4748:4749 Coq.Init.Logic <> :type_scope:'~'_x not
R4750:4760 VCC.AssertionSemantics <> eval_assert def
R4770:4772 VCC.AssertionSemantics <> ghe var
R4767:4768 VCC.AssertionSemantics <> rh var
R4764:4765 VCC.AssertionSemantics <> re var
R4762:4762 VCC.AssertionSemantics <> P var
R4778:4784 VCC.AssertionSemantics <> Aexists constr
R4798:4804 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4806:4807 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4808:4818 VCC.AssertionSemantics <> eval_assert def
R4846:4848 VCC.AssertionSemantics <> ghe var
R4843:4844 VCC.AssertionSemantics <> rh var
R4823:4832 VCC.Environment <> update_env def
R4840:4840 VCC.AssertionSemantics <> v var
R4834:4835 VCC.AssertionSemantics <> re var
R4820:4820 VCC.AssertionSemantics <> P var
R4854:4861 VCC.AssertionSemantics <> Agexists constr
R4875:4881 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4883:4888 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4889:4899 VCC.AssertionSemantics <> eval_assert def
R4910:4919 VCC.Environment <> update_env def
R4928:4928 VCC.AssertionSemantics <> v var
R4921:4923 VCC.AssertionSemantics <> ghe var
R4906:4907 VCC.AssertionSemantics <> rh var
R4903:4904 VCC.AssertionSemantics <> re var
R4901:4901 VCC.AssertionSemantics <> P var
R4935:4942 VCC.AssertionSemantics <> Adefined constr
R4951:4952 Coq.Init.Logic <> :type_scope:'~'_x not
R4963:4965 Coq.Init.Logic <> :type_scope:x_'='_x not
R4953:4956 VCC.Environment <> find def
R4958:4959 VCC.AssertionSemantics <> re var
R4966:4969 Coq.Init.Datatypes <> None constr
R4975:4983 VCC.AssertionSemantics <> Agdefined constr
R4992:4993 Coq.Init.Logic <> :type_scope:'~'_x not
R5005:5007 Coq.Init.Logic <> :type_scope:x_'='_x not
R4994:4997 VCC.Environment <> find def
R4999:5001 VCC.AssertionSemantics <> ghe var
R5008:5011 Coq.Init.Datatypes <> None constr
R5017:5022 VCC.AssertionSemantics <> Aalloc constr
R5029:5035 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5039:5044 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5078:5087 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5055:5057 Coq.Init.Logic <> :type_scope:x_'='_x not
R5045:5048 VCC.Environment <> find def
R5050:5052 VCC.AssertionSemantics <> ghe var
R5058:5061 Coq.Init.Datatypes <> Some constr
R5064:5065 VCC.Basics <> RV constr
R5068:5071 VCC.Basics <> Vptr constr
R5073:5075 VCC.AssertionSemantics <> adr var
R5088:5089 Coq.Init.Logic <> :type_scope:'~'_x not
R5096:5098 Coq.Init.Logic <> :type_scope:x_'='_x not
R5090:5091 VCC.AssertionSemantics <> rh var
R5093:5095 VCC.AssertionSemantics <> adr var
R5099:5102 Coq.Init.Datatypes <> None constr
R5109:5121 VCC.AssertionSemantics <> :assert_scope:'UPDATE' not
R5138:5144 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5154:5159 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5193:5200 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5170:5172 Coq.Init.Logic <> :type_scope:x_'='_x not
R5160:5163 VCC.Environment <> find def
R5165:5167 VCC.AssertionSemantics <> ghe var
R5173:5176 Coq.Init.Datatypes <> Some constr
R5179:5180 VCC.Basics <> GV constr
R5183:5187 VCC.Basics <> GVptr constr
R5189:5190 VCC.AssertionSemantics <> p_ var
R5226:5233 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5211:5213 Coq.Init.Logic <> :type_scope:x_'='_x not
R5201:5204 VCC.Environment <> find def
R5206:5208 VCC.AssertionSemantics <> ghe var
R5214:5217 Coq.Init.Datatypes <> Some constr
R5220:5221 VCC.Basics <> RV constr
R5223:5224 VCC.AssertionSemantics <> v_ var
R5270:5277 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5245:5247 Coq.Init.Logic <> :type_scope:x_'='_x not
R5234:5237 VCC.Environment <> find def
R5239:5241 VCC.AssertionSemantics <> ghe var
R5248:5251 Coq.Init.Datatypes <> Some constr
R5254:5255 VCC.Basics <> GV constr
R5258:5263 VCC.Basics <> GVheap constr
R5265:5267 VCC.AssertionSemantics <> h2_ var
R5281:5283 Coq.Init.Logic <> :type_scope:x_'='_x not
R5278:5280 VCC.AssertionSemantics <> h2_ var
R5284:5294 VCC.Heap <> update_heap def
R5303:5306 Coq.Init.Datatypes <> Some constr
R5308:5309 VCC.AssertionSemantics <> v_ var
R5299:5300 VCC.AssertionSemantics <> p_ var
R5296:5297 VCC.AssertionSemantics <> rh var
R5316:5327 VCC.AssertionSemantics <> Aexists_heap constr
R5338:5344 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5348:5353 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5354:5364 VCC.AssertionSemantics <> eval_assert def
R5375:5377 VCC.AssertionSemantics <> ghe var
R5371:5373 VCC.AssertionSemantics <> rh' var
R5368:5369 VCC.AssertionSemantics <> re var
R5366:5366 VCC.AssertionSemantics <> P var
R5383:5393 VCC.AssertionSemantics <> Aequal_heap constr
R5405:5411 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5415:5420 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5457:5464 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5432:5434 Coq.Init.Logic <> :type_scope:x_'='_x not
R5421:5424 VCC.Environment <> find def
R5426:5428 VCC.AssertionSemantics <> ghe var
R5435:5438 Coq.Init.Datatypes <> Some constr
R5441:5442 VCC.Basics <> GV constr
R5445:5450 VCC.Basics <> GVheap constr
R5452:5454 VCC.AssertionSemantics <> xh_ var
R5467:5469 Coq.Init.Logic <> :type_scope:x_'='_x not
R5465:5466 VCC.AssertionSemantics <> rh var
R5470:5472 VCC.AssertionSemantics <> xh_ var
R5478:5487 VCC.AssertionSemantics <> Aexpr_type constr
R5498:5506 VCC.AssertionSemantics <> expr_type def
R5514:5515 VCC.AssertionSemantics <> rh var
R5511:5512 VCC.AssertionSemantics <> re var
R5524:5534 VCC.AssertionSemantics <> Agexpr_type constr
R5545:5554 VCC.AssertionSemantics <> gexpr_type def
R5565:5567 VCC.AssertionSemantics <> ghe var
R5562:5563 VCC.AssertionSemantics <> rh var
R5559:5560 VCC.AssertionSemantics <> re var
R5576:5582 VCC.AssertionSemantics <> Aref_eq constr
R5599:5605 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5607:5612 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5641:5648 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5613:5624 VCC.Expressions <> eval_glvalue def
R5640:5640 VCC.AssertionSemantics <> v var
R5636:5638 VCC.AssertionSemantics <> ghe var
R5633:5634 VCC.AssertionSemantics <> rh var
R5630:5631 VCC.AssertionSemantics <> re var
R5649:5658 VCC.Expressions <> eval_gexpr def
R5675:5678 VCC.Basics <> Vptr constr
R5680:5680 VCC.AssertionSemantics <> v var
R5670:5672 VCC.AssertionSemantics <> ghe var
R5667:5668 VCC.AssertionSemantics <> rh var
R5664:5665 VCC.AssertionSemantics <> re var
R5687:5689 VCC.AssertionSemantics <> Aeq constr
R5706:5712 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5714:5719 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5746:5753 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5720:5729 VCC.Expressions <> eval_gexpr def
R5745:5745 VCC.AssertionSemantics <> v var
R5741:5743 VCC.AssertionSemantics <> ghe var
R5738:5739 VCC.AssertionSemantics <> rh var
R5735:5736 VCC.AssertionSemantics <> re var
R5754:5763 VCC.Expressions <> eval_gexpr def
R5780:5780 VCC.AssertionSemantics <> v var
R5776:5778 VCC.AssertionSemantics <> ghe var
R5773:5774 VCC.AssertionSemantics <> rh var
R5770:5771 VCC.AssertionSemantics <> re var
R5827:5837 VCC.AssertionSemantics <> eval_assert def
not 5799:5799 <> ::'['_x_','_x_','_x_']'_'|='_x
syndef 7381:7391 <> obligations
R7396:7399 Coq.Init.Datatypes <> list ind
R7411:7413 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R7402:7410 VCC.AssertionSemantics <> assertion ind
R7414:7422 VCC.AssertionSemantics <> assertion ind
def 7438:7451 <> assert_entails
R7471:7474 VCC.Environment <> renv def
R7481:7484 VCC.Expressions <> heap syndef
R7491:7494 VCC.Environment <> genv def
R7514:7517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7518:7518 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7520:7521 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7523:7524 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7528:7532 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7533:7533 VCC.AssertionSemantics <> Q var
R7519:7519 VCC.AssertionSemantics <> e var
R7522:7522 VCC.AssertionSemantics <> h var
R7525:7527 VCC.AssertionSemantics <> ghe var
R7498:7498 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7500:7501 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7503:7504 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7508:7512 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R7513:7513 VCC.AssertionSemantics <> P var
R7499:7499 VCC.AssertionSemantics <> e var
R7502:7502 VCC.AssertionSemantics <> h var
R7505:7507 VCC.AssertionSemantics <> ghe var
R7560:7573 VCC.AssertionSemantics <> assert_entails def
not 7545:7545 <> ::x_'||='_x
def 7627:7646 <> assertion_entailment
R7669:7671 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R7660:7668 VCC.AssertionSemantics <> assertion ind
R7672:7680 VCC.AssertionSemantics <> assertion ind
R7706:7715 VCC.AssertionSemantics <> entailment var
R7721:7725 VCC.AssertionSemantics <> ::x_'||='_x not
R7720:7720 VCC.AssertionSemantics <> P var
R7726:7726 VCC.AssertionSemantics <> Q var
def 7794:7808 <> list_entailment
R7824:7827 Coq.Init.Datatypes <> list ind
R7839:7841 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R7830:7838 VCC.AssertionSemantics <> assertion ind
R7842:7850 VCC.AssertionSemantics <> assertion ind
R7871:7881 VCC.AssertionSemantics <> entailments var
R7892:7894 Coq.Init.Datatypes <> nil constr
R7899:7902 Coq.Init.Logic <> True ind
R7911:7912 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7945:7948 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7921:7940 VCC.AssertionSemantics <> assertion_entailment def
R7949:7963 VCC.AssertionSemantics <> list_entailment def
prf 7983:8001 <> list_entailment_app
R8054:8062 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8026:8040 VCC.AssertionSemantics <> list_entailment def
R8046:8049 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8043:8045 VCC.AssertionSemantics <> ls1 var
R8050:8052 VCC.AssertionSemantics <> ls2 var
R8082:8085 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8063:8077 VCC.AssertionSemantics <> list_entailment def
R8079:8081 VCC.AssertionSemantics <> ls1 var
R8086:8100 VCC.AssertionSemantics <> list_entailment def
R8102:8104 VCC.AssertionSemantics <> ls2 var
R8189:8197 Coq.Init.Logic <> and_assoc thm
R8189:8197 Coq.Init.Logic <> and_assoc thm
R8189:8197 Coq.Init.Logic <> and_assoc thm
R8189:8197 Coq.Init.Logic <> and_assoc thm
R8189:8197 Coq.Init.Logic <> and_assoc thm
R8364:8367 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8364:8367 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8466:8469 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8466:8469 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8571:8585 VCC.AssertionSemantics <> list_entailment def
R8589:8592 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8571:8585 VCC.AssertionSemantics <> list_entailment def
R8589:8592 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8688:8702 VCC.AssertionSemantics <> list_entailment def
R8706:8709 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8688:8702 VCC.AssertionSemantics <> list_entailment def
R8706:8709 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8743:8761 VCC.AssertionSemantics <> list_entailment_app thm
R8865:8879 VCC.AssertionSemantics <> list_entailment def
R8883:8886 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8865:8879 VCC.AssertionSemantics <> list_entailment def
R8883:8886 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8966:8980 VCC.AssertionSemantics <> list_entailment def
R8984:8987 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8966:8980 VCC.AssertionSemantics <> list_entailment def
R8984:8987 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9015:9033 VCC.AssertionSemantics <> list_entailment_app thm
R9114:9117 VCC.Environment <> renv def
R9131:9134 VCC.Expressions <> heap syndef
R9148:9151 VCC.Environment <> genv def
R9114:9117 VCC.Environment <> renv def
R9131:9134 VCC.Expressions <> heap syndef
R9148:9151 VCC.Environment <> genv def
R9390:9400 VCC.AssertionSemantics <> eval_assert def
R9390:9400 VCC.AssertionSemantics <> eval_assert def
R9476:9479 VCC.Environment <> renv def
R9493:9496 VCC.Expressions <> heap syndef
R9510:9513 VCC.Environment <> genv def
R9476:9479 VCC.Environment <> renv def
R9493:9496 VCC.Expressions <> heap syndef
R9510:9513 VCC.Environment <> genv def
R9288:9291 VCC.Environment <> renv def
R9305:9308 VCC.Expressions <> heap syndef
R9322:9325 VCC.Environment <> genv def
R9288:9291 VCC.Environment <> renv def
R9305:9308 VCC.Expressions <> heap syndef
R9322:9325 VCC.Environment <> genv def
R9614:9627 VCC.AssertionSemantics <> assert_entails def
R9776:9779 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9776:9779 Coq.Init.Logic <> :type_scope:x_'/\'_x not
sec 9847:9859 <> FreeFreshVars
def 10131:10139 <> free_vars
R10145:10153 VCC.AssertionSemantics <> assertion ind
R10157:10162 VCC.Expressions PSet t def
R10205:10205 VCC.AssertionSemantics <> A var
R10216:10220 VCC.AssertionSemantics <> Atrue constr
R10224:10229 VCC.AssertionSemantics <> Afalse constr
R10233:10237 Coq.MSets.MSetPositive PositiveSet empty def
R10233:10237 Coq.MSets.MSetPositive PositiveSet empty def
R10243:10246 VCC.AssertionSemantics <> Aand constr
R10257:10261 Coq.MSets.MSetPositive PositiveSet union def
R10279:10287 VCC.AssertionSemantics <> free_vars def
R10264:10272 VCC.AssertionSemantics <> free_vars def
R10297:10299 VCC.AssertionSemantics <> Aor constr
R10310:10314 Coq.MSets.MSetPositive PositiveSet union def
R10332:10340 VCC.AssertionSemantics <> free_vars def
R10317:10325 VCC.AssertionSemantics <> free_vars def
R10350:10353 VCC.AssertionSemantics <> Anot constr
R10361:10369 VCC.AssertionSemantics <> free_vars def
R10378:10384 VCC.AssertionSemantics <> Aexists constr
R10396:10404 VCC.AssertionSemantics <> free_vars def
R10414:10421 VCC.AssertionSemantics <> Agexists constr
R10431:10441 VCC.Expressions PSet remove def
R10446:10454 VCC.AssertionSemantics <> free_vars def
R10464:10471 VCC.AssertionSemantics <> Adefined constr
R10479:10483 Coq.MSets.MSetPositive PositiveSet empty def
R10489:10497 VCC.AssertionSemantics <> Agdefined constr
R10505:10513 Coq.MSets.MSetPositive PositiveSet singleton def
R10522:10527 VCC.AssertionSemantics <> Aalloc constr
R10534:10542 Coq.MSets.MSetPositive PositiveSet singleton def
R10551:10563 VCC.AssertionSemantics <> :assert_scope:'UPDATE' not
R10576:10580 Coq.MSets.MSetPositive PositiveSet union def
R10597:10601 Coq.MSets.MSetPositive PositiveSet union def
R10618:10626 Coq.MSets.MSetPositive PositiveSet singleton def
R10604:10612 Coq.MSets.MSetPositive PositiveSet singleton def
R10583:10591 Coq.MSets.MSetPositive PositiveSet singleton def
R10637:10648 VCC.AssertionSemantics <> Aexists_heap constr
R10656:10664 VCC.AssertionSemantics <> free_vars def
R10673:10683 VCC.AssertionSemantics <> Aequal_heap constr
R10691:10699 Coq.MSets.MSetPositive PositiveSet singleton def
R10708:10717 VCC.AssertionSemantics <> Aexpr_type constr
R10726:10730 Coq.MSets.MSetPositive PositiveSet empty def
R10736:10746 VCC.AssertionSemantics <> Agexpr_type constr
R10756:10769 VCC.Expressions <> free_vars_expr def
R10778:10784 VCC.AssertionSemantics <> Aref_eq constr
R10797:10801 Coq.MSets.MSetPositive PositiveSet union def
R10825:10838 VCC.Expressions <> free_vars_expr def
R10804:10817 VCC.Expressions <> free_vars_expr def
R10849:10851 VCC.AssertionSemantics <> Aeq constr
R10864:10868 Coq.MSets.MSetPositive PositiveSet union def
R10892:10905 VCC.Expressions <> free_vars_expr def
R10871:10884 VCC.Expressions <> free_vars_expr def
def 10931:10946 <> env_equiv_assert
R10951:10959 VCC.AssertionSemantics <> assertion ind
R10963:10970 Coq.Relations.Relation_Definitions <> relation def
R10972:10975 VCC.Environment <> genv def
R11031:11043 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11044:11044 Coq.Init.Logic <> :type_scope:x_'='_x not
R11054:11058 Coq.Init.Logic <> :type_scope:x_'='_x not
R11068:11068 Coq.Init.Logic <> :type_scope:x_'='_x not
R11045:11048 VCC.Environment <> find def
R11053:11053 VCC.AssertionSemantics <> x var
R11050:11051 VCC.AssertionSemantics <> e1 var
R11059:11062 VCC.Environment <> find def
R11067:11067 VCC.AssertionSemantics <> x var
R11064:11065 VCC.AssertionSemantics <> e2 var
R11008:11014 VCC.Expressions PSet In def
R11019:11027 VCC.AssertionSemantics <> free_vars def
R11029:11029 VCC.AssertionSemantics <> P var
R11016:11016 VCC.AssertionSemantics <> x var
inst 11088:11114 <> Equivalenc_env_equiv_assert
R11129:11139 Coq.Classes.RelationClasses <> Equivalence class
R11142:11157 VCC.AssertionSemantics <> env_equiv_assert def
R11159:11161 VCC.AssertionSemantics <> ass var
prf 11319:11333 <> env_equiv_equiv
R11378:11387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11388:11403 VCC.AssertionSemantics <> env_equiv_assert def
R11411:11412 VCC.AssertionSemantics <> e2 var
R11408:11409 VCC.AssertionSemantics <> e1 var
R11405:11406 VCC.AssertionSemantics <> ex var
R11363:11371 VCC.Environment <> env_equiv def
R11376:11377 VCC.AssertionSemantics <> e2 var
R11373:11374 VCC.AssertionSemantics <> e1 var
prf 11471:11496 <> free_vars_env_equiv_assert
R11552:11563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11585:11600 VCC.AssertionSemantics <> env_equiv_assert def
R11624:11624 VCC.AssertionSemantics <> e var
R11605:11614 VCC.Environment <> update_env def
R11620:11621 VCC.AssertionSemantics <> ov var
R11618:11618 VCC.AssertionSemantics <> k var
R11616:11616 VCC.AssertionSemantics <> e var
R11602:11602 VCC.AssertionSemantics <> P var
R11527:11528 Coq.Init.Logic <> :type_scope:'~'_x not
R11529:11535 VCC.Expressions PSet In def
R11540:11548 VCC.AssertionSemantics <> free_vars def
R11550:11550 VCC.AssertionSemantics <> P var
R11537:11537 VCC.AssertionSemantics <> k var
R11713:11715 compcert.lib.Coqlib <> peq def
R11765:11767 VCC.Environment <> gso thm
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11713:11715 compcert.lib.Coqlib <> peq def
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
R11765:11767 VCC.Environment <> gso thm
inst 11810:11834 <> Proper_eval_assert_assert
R11855:11860 Coq.Classes.Morphisms <> Proper class
R11947:11957 VCC.AssertionSemantics <> eval_assert def
R11959:11961 VCC.AssertionSemantics <> ass var
R11872:11876 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R11863:11871 VCC.Environment <> env_equiv def
R11885:11889 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R11877:11884 Coq.Init.Logic <> eq ind
R11910:11914 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R11890:11905 VCC.AssertionSemantics <> env_equiv_assert def
R11907:11909 VCC.AssertionSemantics <> ass var
R11915:11923 Coq.Init.Logic <> iff def
R12232:12236 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12232:12236 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12418:12433 VCC.AssertionSemantics <> env_equiv_assert def
R12418:12433 VCC.AssertionSemantics <> env_equiv_assert def
R12445:12460 VCC.AssertionSemantics <> env_equiv_assert def
R12445:12460 VCC.AssertionSemantics <> env_equiv_assert def
R12549:12563 VCC.Expressions PSet union_spec thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12549:12563 VCC.Expressions PSet union_spec thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12614:12630 VCC.AssertionSemantics <> forall_exists_iff thm
R12770:12772 compcert.lib.Coqlib <> peq def
R12815:12817 VCC.Environment <> gss thm
R12855:12857 VCC.Environment <> gso thm
R12770:12772 compcert.lib.Coqlib <> peq def
R12815:12817 VCC.Environment <> gss thm
R12815:12817 VCC.Environment <> gss thm
R12815:12817 VCC.Environment <> gss thm
R12815:12817 VCC.Environment <> gss thm
R12815:12817 VCC.Environment <> gss thm
R12855:12857 VCC.Environment <> gso thm
R12855:12857 VCC.Environment <> gso thm
R12855:12857 VCC.Environment <> gso thm
R12855:12857 VCC.Environment <> gso thm
R12855:12857 VCC.Environment <> gso thm
R12914:12929 VCC.Expressions PSet remove_spec thm
R12914:12929 VCC.Expressions PSet remove_spec thm
R13063:13076 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13063:13076 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13158:13171 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13158:13171 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13209:13225 VCC.AssertionSemantics <> forall_exists_iff thm
R13209:13225 VCC.AssertionSemantics <> forall_exists_iff thm
R13209:13225 VCC.AssertionSemantics <> forall_exists_iff thm
R13209:13225 VCC.AssertionSemantics <> forall_exists_iff thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13333:13342 Coq.MSets.MSetPositive PositiveSet union_spec thm
R13357:13370 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13445:13458 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13445:13458 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13445:13458 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R13571:13585 VCC.Expressions <> env_equiv_gexpr def
R13571:13585 VCC.Expressions <> env_equiv_gexpr def
R13643:13657 VCC.Expressions PSet union_spec thm
R13643:13657 VCC.Expressions PSet union_spec thm
R13689:13703 VCC.Expressions <> env_equiv_gexpr def
R13689:13703 VCC.Expressions <> env_equiv_gexpr def
R13762:13776 VCC.Expressions PSet union_spec thm
R13762:13776 VCC.Expressions PSet union_spec thm
R13898:13912 VCC.Expressions <> env_equiv_gexpr def
R13898:13912 VCC.Expressions <> env_equiv_gexpr def
R13970:13984 VCC.Expressions PSet union_spec thm
R13970:13984 VCC.Expressions PSet union_spec thm
R14016:14030 VCC.Expressions <> env_equiv_gexpr def
R14016:14030 VCC.Expressions <> env_equiv_gexpr def
R14089:14103 VCC.Expressions PSet union_spec thm
R14089:14103 VCC.Expressions PSet union_spec thm
def 14231:14239 <> fresh_var
R14251:14256 VCC.Expressions PSet t def
R14260:14267 Coq.Numbers.BinNums <> positive ind
R14280:14286 Coq.MSets.MSetPositive PositiveSet max_elt def
R14288:14295 VCC.AssertionSemantics <> set_vars var
R14307:14310 Coq.Init.Datatypes <> Some constr
R14318:14319 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R14325:14328 Coq.Init.Datatypes <> None constr
prf 14350:14363 <> fresh_var_spec
R14389:14390 Coq.Init.Logic <> :type_scope:'~'_x not
R14391:14397 VCC.Expressions PSet In def
R14420:14427 VCC.AssertionSemantics <> set_vars var
R14400:14408 VCC.AssertionSemantics <> fresh_var def
R14410:14417 VCC.AssertionSemantics <> set_vars var
R14459:14467 VCC.AssertionSemantics <> fresh_var def
R14509:14515 Coq.MSets.MSetPositive PositiveSet max_elt def
R14509:14515 Coq.MSets.MSetPositive PositiveSet max_elt def
R14546:14563 VCC.Expressions PSet max_elt_spec2 thm
R14546:14563 VCC.Expressions PSet max_elt_spec2 thm
R14622:14624 Coq.MSets.MSetPositive PositiveSet elt def
R14684:14701 VCC.Expressions PSet max_elt_spec3 thm
R14684:14701 VCC.Expressions PSet max_elt_spec3 thm
prf 14781:14800 <> fresh_vars_spec_util
R14837:14845 VCC.AssertionSemantics <> fresh_var def
R14848:14852 Coq.MSets.MSetPositive PositiveSet union def
R14871:14875 Coq.MSets.MSetPositive PositiveSet union def
R14898:14906 Coq.MSets.MSetPositive PositiveSet singleton def
R14908:14908 VCC.AssertionSemantics <> x var
R14878:14891 VCC.Expressions <> free_vars_expr def
R14893:14894 VCC.AssertionSemantics <> ex var
R14855:14863 VCC.AssertionSemantics <> free_vars def
R14865:14867 VCC.AssertionSemantics <> phi var
R14951:14958 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14921:14922 Coq.Init.Logic <> :type_scope:'~'_x not
R14923:14929 VCC.Expressions PSet In def
R14937:14945 VCC.AssertionSemantics <> free_vars def
R14947:14949 VCC.AssertionSemantics <> phi var
R14931:14934 VCC.AssertionSemantics <> temp var
R14993:15000 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14959:14960 Coq.Init.Logic <> :type_scope:'~'_x not
R14961:14967 VCC.Expressions PSet In def
R14975:14988 VCC.Expressions <> free_vars_expr def
R14990:14991 VCC.AssertionSemantics <> ex var
R14969:14972 VCC.AssertionSemantics <> temp var
R15005:15008 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15001:15004 VCC.AssertionSemantics <> temp var
R15009:15009 VCC.AssertionSemantics <> x var
R15043:15056 VCC.AssertionSemantics <> fresh_var_spec thm
R15059:15063 Coq.MSets.MSetPositive PositiveSet union def
R15082:15086 Coq.MSets.MSetPositive PositiveSet union def
R15109:15117 Coq.MSets.MSetPositive PositiveSet singleton def
R15089:15102 VCC.Expressions <> free_vars_expr def
R15066:15074 VCC.AssertionSemantics <> free_vars def
R15043:15056 VCC.AssertionSemantics <> fresh_var_spec thm
R15059:15063 Coq.MSets.MSetPositive PositiveSet union def
R15082:15086 Coq.MSets.MSetPositive PositiveSet union def
R15109:15117 Coq.MSets.MSetPositive PositiveSet singleton def
R15089:15102 VCC.Expressions <> free_vars_expr def
R15066:15074 VCC.AssertionSemantics <> free_vars def
R15142:15156 VCC.Expressions PSet union_spec thm
R15142:15156 VCC.Expressions PSet union_spec thm
R15142:15156 VCC.Expressions PSet union_spec thm
R15142:15156 VCC.Expressions PSet union_spec thm
R15142:15156 VCC.Expressions PSet union_spec thm
R15172:15196 Coq.Logic.Classical_Prop <> not_or_and thm
R15172:15196 Coq.Logic.Classical_Prop <> not_or_and thm
R15233:15257 Coq.Logic.Classical_Prop <> not_or_and thm
R15233:15257 Coq.Logic.Classical_Prop <> not_or_and thm
R15348:15366 VCC.Expressions PSet singleton_spec thm
R15348:15366 VCC.Expressions PSet singleton_spec thm
R15348:15366 VCC.Expressions PSet singleton_spec thm
prf 15387:15402 <> expr_type_update
R15457:15465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15535:15556 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15490:15499 VCC.AssertionSemantics <> gexpr_type def
R15533:15534 VCC.AssertionSemantics <> ty var
R15510:15519 VCC.Environment <> update_env def
R15527:15530 VCC.AssertionSemantics <> v_ty var
R15525:15525 VCC.AssertionSemantics <> k var
R15521:15523 VCC.AssertionSemantics <> ghe var
R15507:15507 VCC.AssertionSemantics <> h var
R15505:15505 VCC.AssertionSemantics <> e var
R15501:15503 VCC.AssertionSemantics <> gex var
R15557:15566 VCC.AssertionSemantics <> gexpr_type def
R15580:15581 VCC.AssertionSemantics <> ty var
R15576:15578 VCC.AssertionSemantics <> ghe var
R15574:15574 VCC.AssertionSemantics <> h var
R15572:15572 VCC.AssertionSemantics <> e var
R15568:15570 VCC.AssertionSemantics <> gex var
R15425:15426 Coq.Init.Logic <> :type_scope:'~'_x not
R15427:15433 VCC.Expressions PSet In def
R15438:15451 VCC.Expressions <> free_vars_expr def
R15453:15455 VCC.AssertionSemantics <> gex var
R15435:15435 VCC.AssertionSemantics <> k var
R15608:15626 VCC.Expressions <> free_vars_env_equiv thm
R15608:15626 VCC.Expressions <> free_vars_env_equiv thm
prf 15670:15685 <> eval_expr_update
R15740:15748 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15819:15829 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15777:15786 VCC.Expressions <> eval_gexpr def
R15818:15818 VCC.AssertionSemantics <> v var
R15797:15806 VCC.Environment <> update_env def
R15814:15815 VCC.AssertionSemantics <> v' var
R15812:15812 VCC.AssertionSemantics <> k var
R15808:15810 VCC.AssertionSemantics <> ghe var
R15794:15794 VCC.AssertionSemantics <> h var
R15792:15792 VCC.AssertionSemantics <> e var
R15788:15790 VCC.AssertionSemantics <> gex var
R15830:15839 VCC.Expressions <> eval_gexpr def
R15853:15853 VCC.AssertionSemantics <> v var
R15849:15851 VCC.AssertionSemantics <> ghe var
R15847:15847 VCC.AssertionSemantics <> h var
R15845:15845 VCC.AssertionSemantics <> e var
R15841:15843 VCC.AssertionSemantics <> gex var
R15708:15709 Coq.Init.Logic <> :type_scope:'~'_x not
R15710:15716 VCC.Expressions PSet In def
R15721:15734 VCC.Expressions <> free_vars_expr def
R15736:15738 VCC.AssertionSemantics <> gex var
R15718:15718 VCC.AssertionSemantics <> k var
R15880:15898 VCC.Expressions <> free_vars_env_equiv thm
R15880:15898 VCC.Expressions <> free_vars_env_equiv thm
prf 15942:15957 <> free_vars_update
R16007:16015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16081:16091 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16041:16051 VCC.AssertionSemantics <> eval_assert def
R16062:16071 VCC.Environment <> update_env def
R16079:16079 VCC.AssertionSemantics <> v var
R16077:16077 VCC.AssertionSemantics <> k var
R16073:16075 VCC.AssertionSemantics <> ghe var
R16059:16059 VCC.AssertionSemantics <> h var
R16057:16057 VCC.AssertionSemantics <> e var
R16053:16055 VCC.AssertionSemantics <> phi var
R16092:16102 VCC.AssertionSemantics <> eval_assert def
R16112:16114 VCC.AssertionSemantics <> ghe var
R16110:16110 VCC.AssertionSemantics <> h var
R16108:16108 VCC.AssertionSemantics <> e var
R16104:16106 VCC.AssertionSemantics <> phi var
R15980:15981 Coq.Init.Logic <> :type_scope:'~'_x not
R15982:15988 VCC.Expressions PSet In def
R15993:16001 VCC.AssertionSemantics <> free_vars def
R16003:16005 VCC.AssertionSemantics <> phi var
R15990:15990 VCC.AssertionSemantics <> k var
R16141:16166 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R16141:16166 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R16208:16220 VCC.AssertionSemantics FreeFreshVars <> sec
