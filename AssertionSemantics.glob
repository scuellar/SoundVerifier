DIGEST dc5d146ed42b87b594d310461534c424
FVCC.AssertionSemantics
R35:52 Coq.MSets.MSetPositive <> <> lib
R89:99 Coq.MSets.MSetPositive PositiveSet <> modtype
mod 82:85 <> PSet
R147:167 Coq.Classes.Morphisms <> <> lib
R186:205 Coq.Relations.Relation_Definitions <> <> lib
R224:242 compcert.lib.Coqlib <> <> lib
R260:280 compcert.lib.Integers <> <> lib
R298:314 compcert.lib.Maps <> <> lib
R333:343 VCC.Tactics <> <> lib
R361:373 VCC.Freshvars <> <> lib
R391:405 VCC.Environment <> <> lib
R423:430 VCC.Heap <> <> lib
R448:457 VCC.Basics <> <> lib
R475:489 VCC.Expressions <> <> lib
prf 499:515 <> forall_exists_iff
R534:537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R533:533 VCC.AssertionSemantics <> A var
R549:549 Coq.Init.Logic <> :type_scope:x_'->'_x not
R571:575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R576:576 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R590:596 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R610:610 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R577:583 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R585:586 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R587:587 VCC.AssertionSemantics <> P var
R589:589 VCC.AssertionSemantics <> x var
R597:603 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R605:606 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R607:607 VCC.AssertionSemantics <> Q var
R609:609 VCC.AssertionSemantics <> x var
R563:567 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R560:560 VCC.AssertionSemantics <> P var
R562:562 VCC.AssertionSemantics <> x var
R568:568 VCC.AssertionSemantics <> Q var
R570:570 VCC.AssertionSemantics <> x var
def 884:891 <> val_type
R896:899 VCC.Expressions <> heap syndef
R904:906 VCC.Basics <> val ind
R912:915 VCC.Basics <> type ind
R936:937 VCC.AssertionSemantics <> ty var
R933:933 VCC.AssertionSemantics <> v var
R948:951 VCC.Basics <> Vptr constr
R956:963 VCC.Basics <> Tpointer constr
R988:988 VCC.AssertionSemantics <> h var
R1007:1010 Coq.Init.Datatypes <> Some constr
R1018:1025 VCC.AssertionSemantics <> val_type def
R1027:1027 VCC.AssertionSemantics <> h var
R1042:1046 VCC.Basics <> Tvoid constr
R1054:1057 Coq.Init.Logic <> True ind
R1069:1072 Coq.Init.Datatypes <> None constr
R1077:1081 Coq.Init.Logic <> False ind
R1096:1099 VCC.Basics <> Vint constr
R1104:1107 VCC.Basics <> Tint constr
R1112:1115 Coq.Init.Logic <> True ind
R1129:1133 Coq.Init.Logic <> False ind
def 1212:1220 <> expr_type
R1226:1229 VCC.Expressions <> expr ind
R1234:1236 VCC.Environment <> env def
R1241:1244 VCC.Expressions <> heap syndef
R1250:1253 VCC.Basics <> type ind
R1272:1273 VCC.AssertionSemantics <> ex var
R1284:1293 VCC.Expressions <> Econst_int constr
R1302:1304 Coq.Init.Logic <> :type_scope:x_'='_x not
R1300:1301 VCC.AssertionSemantics <> ty var
R1305:1308 VCC.Basics <> Tint constr
R1314:1321 VCC.Expressions <> Etempvar constr
R1328:1334 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1336:1337 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1355:1358 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1346:1348 Coq.Init.Logic <> :type_scope:x_'='_x not
R1338:1341 VCC.Environment <> find def
R1343:1343 VCC.AssertionSemantics <> e var
R1349:1352 Coq.Init.Datatypes <> Some constr
R1354:1354 VCC.AssertionSemantics <> v var
R1359:1366 VCC.AssertionSemantics <> val_type def
R1372:1373 VCC.AssertionSemantics <> ty var
R1370:1370 VCC.AssertionSemantics <> v var
R1368:1368 VCC.AssertionSemantics <> h var
R1379:1384 VCC.Expressions <> Ederef constr
R1394:1402 VCC.AssertionSemantics <> expr_type def
R1413:1420 VCC.Basics <> Tpointer constr
R1422:1423 VCC.AssertionSemantics <> ty var
R1410:1410 VCC.AssertionSemantics <> h var
R1408:1408 VCC.AssertionSemantics <> e var
prf 1439:1452 <> eval_expr_type
R1470:1473 VCC.Expressions <> expr ind
R1481:1484 VCC.Environment <> renv def
R1492:1495 VCC.Expressions <> heap syndef
R1526:1533 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1549:1556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1557:1565 VCC.AssertionSemantics <> expr_type def
R1574:1575 VCC.AssertionSemantics <> ty var
R1572:1572 VCC.AssertionSemantics <> h var
R1570:1570 VCC.AssertionSemantics <> e var
R1567:1568 VCC.AssertionSemantics <> ex var
R1534:1541 VCC.AssertionSemantics <> val_type def
R1547:1548 VCC.AssertionSemantics <> ty var
R1545:1545 VCC.AssertionSemantics <> v var
R1543:1543 VCC.AssertionSemantics <> h var
R1508:1516 VCC.Expressions <> eval_expr def
R1525:1525 VCC.AssertionSemantics <> v var
R1523:1523 VCC.AssertionSemantics <> h var
R1521:1521 VCC.AssertionSemantics <> e var
R1518:1519 VCC.AssertionSemantics <> ex var
R1651:1658 VCC.AssertionSemantics <> val_type def
prf 1876:1898 <> expr_type_eval_pointers
R1954:1961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1992:1999 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2000:2007 VCC.AssertionSemantics <> val_type def
R2013:2014 VCC.AssertionSemantics <> ty var
R2011:2011 VCC.AssertionSemantics <> v var
R2009:2009 VCC.AssertionSemantics <> h var
R1962:1970 VCC.AssertionSemantics <> expr_type def
R1980:1987 VCC.Basics <> Tpointer constr
R1989:1990 VCC.AssertionSemantics <> ty var
R1977:1977 VCC.AssertionSemantics <> h var
R1975:1975 VCC.AssertionSemantics <> e var
R1972:1973 VCC.AssertionSemantics <> ex var
R1927:1935 VCC.Expressions <> eval_expr def
R1953:1953 VCC.AssertionSemantics <> v var
R1951:1951 VCC.AssertionSemantics <> h var
R1949:1949 VCC.AssertionSemantics <> e var
R1938:1943 VCC.Expressions <> Ederef constr
R1945:1946 VCC.AssertionSemantics <> ex var
inst 2413:2433 <> Proper_expr_type_expr
R2436:2441 Coq.Classes.Morphisms <> Proper class
R2507:2515 VCC.AssertionSemantics <> expr_type def
R2452:2456 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2444:2451 Coq.Init.Logic <> eq ind
R2466:2470 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2457:2465 VCC.Environment <> env_equiv def
R2479:2482 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2471:2478 Coq.Init.Logic <> eq ind
R2491:2495 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R2483:2490 Coq.Init.Logic <> eq ind
R2496:2504 Coq.Init.Logic <> iff def
R2600:2602 VCC.Environment <> env def
R2600:2602 VCC.Environment <> env def
R2633:2636 VCC.Basics <> type ind
R2633:2636 VCC.Basics <> type ind
R2666:2669 VCC.Expressions <> heap syndef
R2666:2669 VCC.Expressions <> heap syndef
def 2790:2798 <> gval_type
R2804:2807 VCC.Basics <> gval ind
R2814:2818 VCC.Basics <> gtype ind
R2840:2842 VCC.AssertionSemantics <> gty var
R2836:2837 VCC.AssertionSemantics <> gv var
R2853:2857 VCC.Basics <> GVnat constr
R2862:2866 VCC.Basics <> GTnat constr
R2870:2875 VCC.Basics <> GVbool constr
R2880:2885 VCC.Basics <> GTbool constr
R2889:2894 VCC.Basics <> GVheap constr
R2899:2904 VCC.Basics <> GTheap constr
R2909:2912 Coq.Init.Logic <> True ind
R2909:2912 Coq.Init.Logic <> True ind
R2909:2912 Coq.Init.Logic <> True ind
R2927:2931 Coq.Init.Logic <> False ind
def 2954:2962 <> uval_type
R2968:2971 VCC.Expressions <> heap syndef
R2977:2980 VCC.Basics <> uval ind
R2987:2991 VCC.Basics <> utype ind
R3014:3015 VCC.AssertionSemantics <> uv var
R3009:3011 VCC.AssertionSemantics <> uty var
R3028:3029 VCC.Basics <> RT constr
R3035:3036 VCC.Basics <> RV constr
R3043:3050 VCC.AssertionSemantics <> val_type def
R3052:3053 VCC.AssertionSemantics <> rh var
R3066:3067 VCC.Basics <> GT constr
R3073:3074 VCC.Basics <> GV constr
R3081:3089 VCC.AssertionSemantics <> gval_type def
R3110:3114 Coq.Init.Logic <> False ind
def 3133:3142 <> gexpr_type
R3149:3153 VCC.Expressions <> gexpr ind
R3158:3160 VCC.Environment <> env def
R3166:3169 VCC.Expressions <> heap syndef
R3176:3179 VCC.Environment <> genv def
R3185:3189 VCC.Basics <> utype ind
R3212:3214 VCC.AssertionSemantics <> gex var
R3208:3209 VCC.AssertionSemantics <> ty var
R3225:3226 VCC.Basics <> RT constr
R3233:3237 VCC.Expressions <> Rexpr constr
R3246:3254 VCC.AssertionSemantics <> expr_type def
R3262:3263 VCC.AssertionSemantics <> rh var
R3260:3260 VCC.AssertionSemantics <> e var
R3273:3274 VCC.Basics <> RT constr
R3281:3291 VCC.Expressions <> GEconst_ptr constr
R3298:3305 VCC.AssertionSemantics <> val_type def
R3311:3314 VCC.Basics <> Vptr constr
R3307:3308 VCC.AssertionSemantics <> rh var
R3327:3328 VCC.Basics <> GT constr
R3335:3345 VCC.Expressions <> GEconst_nat constr
R3352:3360 VCC.AssertionSemantics <> gval_type def
R3363:3367 VCC.Basics <> GVnat constr
R3380:3381 VCC.Basics <> GT constr
R3388:3399 VCC.Expressions <> GEconst_bool constr
R3406:3414 VCC.AssertionSemantics <> gval_type def
R3417:3422 VCC.Basics <> GVbool constr
R3435:3436 VCC.Basics <> GT constr
R3443:3451 VCC.Expressions <> GEtempvar constr
R3458:3464 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3466:3467 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3487:3521 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3478:3480 Coq.Init.Logic <> :type_scope:x_'='_x not
R3468:3471 VCC.Environment <> find def
R3473:3475 VCC.AssertionSemantics <> ghe var
R3481:3484 Coq.Init.Datatypes <> Some constr
R3486:3486 VCC.AssertionSemantics <> v var
R3522:3530 VCC.AssertionSemantics <> uval_type def
R3537:3538 VCC.AssertionSemantics <> ty var
R3535:3535 VCC.AssertionSemantics <> v var
R3532:3533 VCC.AssertionSemantics <> rh var
R3544:3545 VCC.Basics <> RT constr
R3552:3558 VCC.Expressions <> GEderef constr
R3568:3577 VCC.AssertionSemantics <> gexpr_type def
R3593:3594 VCC.Basics <> GT constr
R3597:3605 VCC.Basics <> GTpointer constr
R3588:3590 VCC.AssertionSemantics <> ghe var
R3585:3586 VCC.AssertionSemantics <> rh var
R3583:3583 VCC.AssertionSemantics <> e var
R3625:3629 Coq.Init.Logic <> False ind
inst 3655:3671 <> Proper_gexpr_type
R3686:3691 Coq.Classes.Morphisms <> Proper class
R3770:3779 VCC.AssertionSemantics <> gexpr_type def
R3781:3783 VCC.AssertionSemantics <> gex var
R3703:3707 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R3694:3702 VCC.Environment <> env_equiv def
R3716:3720 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R3708:3715 Coq.Init.Logic <> eq ind
R3740:3744 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R3721:3735 VCC.Expressions <> env_equiv_gexpr def
R3737:3739 VCC.AssertionSemantics <> gex var
R3753:3757 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R3745:3752 Coq.Init.Logic <> eq ind
R3758:3766 Coq.Init.Logic <> iff def
def 3816:3830 <> option_val_type
R3836:3839 VCC.Expressions <> heap syndef
R3846:3851 Coq.Init.Datatypes <> option ind
R3853:3855 VCC.Basics <> val ind
R3862:3865 VCC.Basics <> type ind
R3884:3885 VCC.AssertionSemantics <> ov var
R3896:3899 Coq.Init.Datatypes <> Some constr
R3906:3913 VCC.AssertionSemantics <> val_type def
R3920:3921 VCC.AssertionSemantics <> ty var
R3915:3916 VCC.AssertionSemantics <> rh var
R3927:3930 Coq.Init.Datatypes <> None constr
R3935:3938 Coq.Init.Logic <> True ind
def 3960:3976 <> option_uval_utype
R3982:3985 VCC.Expressions <> heap syndef
R3992:3997 Coq.Init.Datatypes <> option ind
R3999:4002 VCC.Basics <> uval ind
R4009:4013 VCC.Basics <> utype ind
R4032:4033 VCC.AssertionSemantics <> ov var
R4044:4047 Coq.Init.Datatypes <> Some constr
R4054:4062 VCC.AssertionSemantics <> uval_type def
R4069:4070 VCC.AssertionSemantics <> ty var
R4064:4065 VCC.AssertionSemantics <> rh var
R4076:4079 Coq.Init.Datatypes <> None constr
R4084:4087 Coq.Init.Logic <> True ind
def 4111:4118 <> bool_val
R4123:4125 VCC.Basics <> val ind
R4131:4134 VCC.Basics <> type ind
R4138:4143 Coq.Init.Datatypes <> option ind
R4145:4148 Coq.Init.Datatypes <> bool ind
R4162:4163 VCC.AssertionSemantics <> ty var
R4160:4160 VCC.AssertionSemantics <> v var
R4174:4177 VCC.Basics <> Vint constr
R4182:4185 VCC.Basics <> Tint constr
R4195:4198 Coq.Init.Datatypes <> Some constr
R4202:4205 Coq.Init.Datatypes <> negb def
R4208:4213 compcert.lib.Integers Int eq def
R4217:4224 compcert.lib.Integers Int zero def
R4241:4244 Coq.Init.Datatypes <> None constr
ind 4290:4298 <> assertion
constr 4304:4308 <> Atrue
constr 4324:4329 <> Afalse
constr 4345:4348 <> Aand
constr 4390:4392 <> Aor
constr 4434:4437 <> Anot
constr 4466:4472 <> Aexists
constr 4510:4517 <> Agexists
constr 4555:4562 <> Adefined
constr 4587:4595 <> Agdefined
constr 4620:4625 <> Aalloc
constr 4650:4661 <> Aupdate_heap
constr 4739:4750 <> Aexists_heap
constr 4779:4789 <> Aequal_heap
constr 4849:4858 <> Aexpr_type
constr 4890:4900 <> Agexpr_type
constr 4934:4940 <> Aref_eq
constr 4973:4975 <> Aeq
R4312:4320 VCC.AssertionSemantics <> assertion ind
R4333:4341 VCC.AssertionSemantics <> assertion ind
R4361:4364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4374:4377 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4378:4386 VCC.AssertionSemantics <> assertion ind
R4365:4373 VCC.AssertionSemantics <> assertion ind
R4352:4360 VCC.AssertionSemantics <> assertion ind
R4405:4408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4418:4421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4422:4430 VCC.AssertionSemantics <> assertion ind
R4409:4417 VCC.AssertionSemantics <> assertion ind
R4396:4404 VCC.AssertionSemantics <> assertion ind
R4450:4453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4454:4462 VCC.AssertionSemantics <> assertion ind
R4441:4449 VCC.AssertionSemantics <> assertion ind
R4481:4484 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4494:4497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4498:4506 VCC.AssertionSemantics <> assertion ind
R4485:4493 VCC.AssertionSemantics <> assertion ind
R4476:4480 VCC.Basics <> ident def
R4526:4529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4539:4542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4543:4551 VCC.AssertionSemantics <> assertion ind
R4530:4538 VCC.AssertionSemantics <> assertion ind
R4521:4525 VCC.Basics <> ident def
R4571:4574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4575:4583 VCC.AssertionSemantics <> assertion ind
R4566:4570 VCC.Basics <> ident def
R4604:4607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4608:4616 VCC.AssertionSemantics <> assertion ind
R4599:4603 VCC.Basics <> ident def
R4634:4637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4638:4646 VCC.AssertionSemantics <> assertion ind
R4629:4633 VCC.Basics <> ident def
R4670:4673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4679:4682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4688:4691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4692:4700 VCC.AssertionSemantics <> assertion ind
R4683:4687 VCC.Basics <> ident def
R4674:4678 VCC.Basics <> ident def
R4665:4669 VCC.Basics <> ident def
R4763:4766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4767:4775 VCC.AssertionSemantics <> assertion ind
R4754:4762 VCC.AssertionSemantics <> assertion ind
R4798:4801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4802:4810 VCC.AssertionSemantics <> assertion ind
R4793:4797 VCC.Basics <> ident def
R4866:4869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4874:4877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4878:4886 VCC.AssertionSemantics <> assertion ind
R4870:4873 VCC.Basics <> type ind
R4862:4865 VCC.Expressions <> expr ind
R4909:4912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4918:4921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4922:4930 VCC.AssertionSemantics <> assertion ind
R4913:4917 VCC.Basics <> utype ind
R4904:4908 VCC.Expressions <> gexpr ind
R4948:4951 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4957:4960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4961:4969 VCC.AssertionSemantics <> assertion ind
R4952:4956 VCC.Expressions <> gexpr ind
R4943:4947 VCC.Expressions <> gexpr ind
R4983:4986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4992:4995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4996:5004 VCC.AssertionSemantics <> assertion ind
R4987:4991 VCC.Expressions <> gexpr ind
R4978:4982 VCC.Expressions <> gexpr ind
R5115:5118 VCC.AssertionSemantics <> Aand constr
not 5107:5107 <> :assert_scope:x_'/\'_x
R5185:5187 VCC.AssertionSemantics <> Aor constr
not 5177:5177 <> :assert_scope:x_'\/'_x
R5259:5262 VCC.AssertionSemantics <> Anot constr
not 5249:5249 <> :assert_scope:'~'_x
R5302:5308 VCC.AssertionSemantics <> Aexists constr
not 5292:5292 <> :assert_scope:'Ex'
R5364:5371 VCC.AssertionSemantics <> Adefined constr
not 5349:5349 <> :assert_scope:'Defined'
R5412:5423 VCC.AssertionSemantics <> Aupdate_heap constr
not 5398:5398 <> :assert_scope:'UPDATE'
R5463:5468 VCC.AssertionSemantics <> Aalloc constr
not 5450:5450 <> :assert_scope:'Alloc'
R5500:5502 VCC.AssertionSemantics <> Aeq constr
not 5492:5492 <> :assert_scope:x_'=='_x
def 5565:5575 <> eval_assert
R5580:5588 VCC.AssertionSemantics <> assertion ind
R5594:5597 VCC.Environment <> renv def
R5603:5606 VCC.Expressions <> heap syndef
R5613:5616 VCC.Environment <> genv def
R5635:5635 VCC.AssertionSemantics <> P var
R5646:5650 VCC.AssertionSemantics <> Atrue constr
R5655:5658 Coq.Init.Logic <> True ind
R5664:5669 VCC.AssertionSemantics <> Afalse constr
R5674:5678 Coq.Init.Logic <> False ind
R5684:5687 VCC.AssertionSemantics <> Aand constr
R5722:5725 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5698:5708 VCC.AssertionSemantics <> eval_assert def
R5719:5721 VCC.AssertionSemantics <> ghe var
R5716:5717 VCC.AssertionSemantics <> rh var
R5713:5714 VCC.AssertionSemantics <> re var
R5726:5736 VCC.AssertionSemantics <> eval_assert def
R5747:5749 VCC.AssertionSemantics <> ghe var
R5744:5745 VCC.AssertionSemantics <> rh var
R5741:5742 VCC.AssertionSemantics <> re var
R5755:5757 VCC.AssertionSemantics <> Aor constr
R5793:5796 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5769:5779 VCC.AssertionSemantics <> eval_assert def
R5790:5792 VCC.AssertionSemantics <> ghe var
R5787:5788 VCC.AssertionSemantics <> rh var
R5784:5785 VCC.AssertionSemantics <> re var
R5797:5807 VCC.AssertionSemantics <> eval_assert def
R5818:5820 VCC.AssertionSemantics <> ghe var
R5815:5816 VCC.AssertionSemantics <> rh var
R5812:5813 VCC.AssertionSemantics <> re var
R5826:5829 VCC.AssertionSemantics <> Anot constr
R5836:5837 Coq.Init.Logic <> :type_scope:'~'_x not
R5838:5848 VCC.AssertionSemantics <> eval_assert def
R5858:5860 VCC.AssertionSemantics <> ghe var
R5855:5856 VCC.AssertionSemantics <> rh var
R5852:5853 VCC.AssertionSemantics <> re var
R5850:5850 VCC.AssertionSemantics <> P var
R5866:5872 VCC.AssertionSemantics <> Aexists constr
R5886:5892 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5894:5895 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5896:5906 VCC.AssertionSemantics <> eval_assert def
R5934:5936 VCC.AssertionSemantics <> ghe var
R5931:5932 VCC.AssertionSemantics <> rh var
R5911:5920 VCC.Environment <> update_env def
R5928:5928 VCC.AssertionSemantics <> v var
R5922:5923 VCC.AssertionSemantics <> re var
R5908:5908 VCC.AssertionSemantics <> P var
R5942:5949 VCC.AssertionSemantics <> Agexists constr
R5963:5969 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5971:5976 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5977:5987 VCC.AssertionSemantics <> eval_assert def
R5998:6007 VCC.Environment <> update_env def
R6016:6016 VCC.AssertionSemantics <> v var
R6009:6011 VCC.AssertionSemantics <> ghe var
R5994:5995 VCC.AssertionSemantics <> rh var
R5991:5992 VCC.AssertionSemantics <> re var
R5989:5989 VCC.AssertionSemantics <> P var
R6023:6030 VCC.AssertionSemantics <> Adefined constr
R6039:6040 Coq.Init.Logic <> :type_scope:'~'_x not
R6051:6053 Coq.Init.Logic <> :type_scope:x_'='_x not
R6041:6044 VCC.Environment <> find def
R6046:6047 VCC.AssertionSemantics <> re var
R6054:6057 Coq.Init.Datatypes <> None constr
R6063:6071 VCC.AssertionSemantics <> Agdefined constr
R6080:6081 Coq.Init.Logic <> :type_scope:'~'_x not
R6093:6095 Coq.Init.Logic <> :type_scope:x_'='_x not
R6082:6085 VCC.Environment <> find def
R6087:6089 VCC.AssertionSemantics <> ghe var
R6096:6099 Coq.Init.Datatypes <> None constr
R6105:6110 VCC.AssertionSemantics <> Aalloc constr
R6117:6123 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6127:6132 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6166:6175 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6143:6145 Coq.Init.Logic <> :type_scope:x_'='_x not
R6133:6136 VCC.Environment <> find def
R6138:6140 VCC.AssertionSemantics <> ghe var
R6146:6149 Coq.Init.Datatypes <> Some constr
R6152:6153 VCC.Basics <> RV constr
R6156:6159 VCC.Basics <> Vptr constr
R6161:6163 VCC.AssertionSemantics <> adr var
R6176:6177 Coq.Init.Logic <> :type_scope:'~'_x not
R6184:6186 Coq.Init.Logic <> :type_scope:x_'='_x not
R6178:6179 VCC.AssertionSemantics <> rh var
R6181:6183 VCC.AssertionSemantics <> adr var
R6187:6190 Coq.Init.Datatypes <> None constr
R6197:6209 VCC.AssertionSemantics <> :assert_scope:'UPDATE' not
R6226:6232 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6242:6247 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6280:6287 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6258:6260 Coq.Init.Logic <> :type_scope:x_'='_x not
R6248:6251 VCC.Environment <> find def
R6253:6255 VCC.AssertionSemantics <> ghe var
R6261:6264 Coq.Init.Datatypes <> Some constr
R6267:6268 VCC.Basics <> RV constr
R6271:6274 VCC.Basics <> Vptr constr
R6276:6277 VCC.AssertionSemantics <> p_ var
R6313:6320 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6298:6300 Coq.Init.Logic <> :type_scope:x_'='_x not
R6288:6291 VCC.Environment <> find def
R6293:6295 VCC.AssertionSemantics <> ghe var
R6301:6304 Coq.Init.Datatypes <> Some constr
R6307:6308 VCC.Basics <> RV constr
R6310:6311 VCC.AssertionSemantics <> v_ var
R6357:6364 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6332:6334 Coq.Init.Logic <> :type_scope:x_'='_x not
R6321:6324 VCC.Environment <> find def
R6326:6328 VCC.AssertionSemantics <> ghe var
R6335:6338 Coq.Init.Datatypes <> Some constr
R6341:6342 VCC.Basics <> GV constr
R6345:6350 VCC.Basics <> GVheap constr
R6352:6354 VCC.AssertionSemantics <> h2_ var
R6368:6370 Coq.Init.Logic <> :type_scope:x_'='_x not
R6365:6367 VCC.AssertionSemantics <> h2_ var
R6371:6381 VCC.Heap <> update_heap def
R6390:6393 Coq.Init.Datatypes <> Some constr
R6395:6396 VCC.AssertionSemantics <> v_ var
R6386:6387 VCC.AssertionSemantics <> p_ var
R6383:6384 VCC.AssertionSemantics <> rh var
R6403:6414 VCC.AssertionSemantics <> Aexists_heap constr
R6425:6431 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6435:6440 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6441:6451 VCC.AssertionSemantics <> eval_assert def
R6462:6464 VCC.AssertionSemantics <> ghe var
R6458:6460 VCC.AssertionSemantics <> rh' var
R6455:6456 VCC.AssertionSemantics <> re var
R6453:6453 VCC.AssertionSemantics <> P var
R6470:6480 VCC.AssertionSemantics <> Aequal_heap constr
R6492:6498 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6502:6507 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6544:6551 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6519:6521 Coq.Init.Logic <> :type_scope:x_'='_x not
R6508:6511 VCC.Environment <> find def
R6513:6515 VCC.AssertionSemantics <> ghe var
R6522:6525 Coq.Init.Datatypes <> Some constr
R6528:6529 VCC.Basics <> GV constr
R6532:6537 VCC.Basics <> GVheap constr
R6539:6541 VCC.AssertionSemantics <> xh_ var
R6554:6556 Coq.Init.Logic <> :type_scope:x_'='_x not
R6552:6553 VCC.AssertionSemantics <> rh var
R6557:6559 VCC.AssertionSemantics <> xh_ var
R6565:6574 VCC.AssertionSemantics <> Aexpr_type constr
R6585:6593 VCC.AssertionSemantics <> expr_type def
R6601:6602 VCC.AssertionSemantics <> rh var
R6598:6599 VCC.AssertionSemantics <> re var
R6611:6621 VCC.AssertionSemantics <> Agexpr_type constr
R6632:6641 VCC.AssertionSemantics <> gexpr_type def
R6652:6654 VCC.AssertionSemantics <> ghe var
R6649:6650 VCC.AssertionSemantics <> rh var
R6646:6647 VCC.AssertionSemantics <> re var
R6663:6669 VCC.AssertionSemantics <> Aref_eq constr
R6686:6692 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6694:6699 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6728:6735 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6700:6711 VCC.Expressions <> eval_glvalue def
R6727:6727 VCC.AssertionSemantics <> v var
R6723:6725 VCC.AssertionSemantics <> ghe var
R6720:6721 VCC.AssertionSemantics <> rh var
R6717:6718 VCC.AssertionSemantics <> re var
R6736:6745 VCC.Expressions <> eval_gexpr def
R6762:6765 VCC.Basics <> Vptr constr
R6767:6767 VCC.AssertionSemantics <> v var
R6757:6759 VCC.AssertionSemantics <> ghe var
R6754:6755 VCC.AssertionSemantics <> rh var
R6751:6752 VCC.AssertionSemantics <> re var
R6774:6776 VCC.AssertionSemantics <> Aeq constr
R6793:6799 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6801:6806 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6833:6840 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6807:6816 VCC.Expressions <> eval_gexpr def
R6832:6832 VCC.AssertionSemantics <> v var
R6828:6830 VCC.AssertionSemantics <> ghe var
R6825:6826 VCC.AssertionSemantics <> rh var
R6822:6823 VCC.AssertionSemantics <> re var
R6841:6850 VCC.Expressions <> eval_gexpr def
R6867:6867 VCC.AssertionSemantics <> v var
R6863:6865 VCC.AssertionSemantics <> ghe var
R6860:6861 VCC.AssertionSemantics <> rh var
R6857:6858 VCC.AssertionSemantics <> re var
R6914:6924 VCC.AssertionSemantics <> eval_assert def
not 6886:6886 <> ::'['_x_','_x_','_x_']'_'|='_x
syndef 8468:8478 <> obligations
R8483:8486 Coq.Init.Datatypes <> list ind
R8498:8500 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R8489:8497 VCC.AssertionSemantics <> assertion ind
R8501:8509 VCC.AssertionSemantics <> assertion ind
def 8525:8538 <> assert_entails
R8558:8561 VCC.Environment <> renv def
R8568:8571 VCC.Expressions <> heap syndef
R8578:8581 VCC.Environment <> genv def
R8601:8604 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8605:8605 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8607:8608 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8610:8611 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8615:8619 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8620:8620 VCC.AssertionSemantics <> Q var
R8606:8606 VCC.AssertionSemantics <> e var
R8609:8609 VCC.AssertionSemantics <> h var
R8612:8614 VCC.AssertionSemantics <> ghe var
R8585:8585 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8587:8588 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8590:8591 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8595:8599 VCC.AssertionSemantics <> ::'['_x_','_x_','_x_']'_'|='_x not
R8600:8600 VCC.AssertionSemantics <> P var
R8586:8586 VCC.AssertionSemantics <> e var
R8589:8589 VCC.AssertionSemantics <> h var
R8592:8594 VCC.AssertionSemantics <> ghe var
R8647:8660 VCC.AssertionSemantics <> assert_entails def
not 8632:8632 <> ::x_'||='_x
def 8714:8733 <> assertion_entailment
R8756:8758 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R8747:8755 VCC.AssertionSemantics <> assertion ind
R8759:8767 VCC.AssertionSemantics <> assertion ind
R8793:8802 VCC.AssertionSemantics <> entailment var
R8808:8812 VCC.AssertionSemantics <> ::x_'||='_x not
R8807:8807 VCC.AssertionSemantics <> P var
R8813:8813 VCC.AssertionSemantics <> Q var
def 8881:8895 <> list_entailment
R8911:8914 Coq.Init.Datatypes <> list ind
R8926:8928 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R8917:8925 VCC.AssertionSemantics <> assertion ind
R8929:8937 VCC.AssertionSemantics <> assertion ind
R8958:8968 VCC.AssertionSemantics <> entailments var
R8979:8981 Coq.Init.Datatypes <> nil constr
R8986:8989 Coq.Init.Logic <> True ind
R8998:8999 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9032:9035 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9008:9027 VCC.AssertionSemantics <> assertion_entailment def
R9036:9050 VCC.AssertionSemantics <> list_entailment def
prf 9070:9088 <> list_entailment_app
R9141:9149 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9113:9127 VCC.AssertionSemantics <> list_entailment def
R9133:9136 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9130:9132 VCC.AssertionSemantics <> ls1 var
R9137:9139 VCC.AssertionSemantics <> ls2 var
R9169:9172 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9150:9164 VCC.AssertionSemantics <> list_entailment def
R9166:9168 VCC.AssertionSemantics <> ls1 var
R9173:9187 VCC.AssertionSemantics <> list_entailment def
R9189:9191 VCC.AssertionSemantics <> ls2 var
R9276:9284 Coq.Init.Logic <> and_assoc thm
R9276:9284 Coq.Init.Logic <> and_assoc thm
R9276:9284 Coq.Init.Logic <> and_assoc thm
R9276:9284 Coq.Init.Logic <> and_assoc thm
R9276:9284 Coq.Init.Logic <> and_assoc thm
R9462:9476 VCC.AssertionSemantics <> list_entailment def
R9480:9483 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9462:9476 VCC.AssertionSemantics <> list_entailment def
R9480:9483 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9579:9593 VCC.AssertionSemantics <> list_entailment def
R9597:9600 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9579:9593 VCC.AssertionSemantics <> list_entailment def
R9597:9600 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9634:9652 VCC.AssertionSemantics <> list_entailment_app thm
R9756:9770 VCC.AssertionSemantics <> list_entailment def
R9774:9777 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9756:9770 VCC.AssertionSemantics <> list_entailment def
R9774:9777 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9857:9871 VCC.AssertionSemantics <> list_entailment def
R9875:9878 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9857:9871 VCC.AssertionSemantics <> list_entailment def
R9875:9878 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9906:9924 VCC.AssertionSemantics <> list_entailment_app thm
R10005:10008 VCC.Environment <> renv def
R10022:10025 VCC.Expressions <> heap syndef
R10039:10042 VCC.Environment <> genv def
R10005:10008 VCC.Environment <> renv def
R10022:10025 VCC.Expressions <> heap syndef
R10039:10042 VCC.Environment <> genv def
R10281:10291 VCC.AssertionSemantics <> eval_assert def
R10281:10291 VCC.AssertionSemantics <> eval_assert def
R10367:10370 VCC.Environment <> renv def
R10384:10387 VCC.Expressions <> heap syndef
R10401:10404 VCC.Environment <> genv def
R10367:10370 VCC.Environment <> renv def
R10384:10387 VCC.Expressions <> heap syndef
R10401:10404 VCC.Environment <> genv def
R10179:10182 VCC.Environment <> renv def
R10196:10199 VCC.Expressions <> heap syndef
R10213:10216 VCC.Environment <> genv def
R10179:10182 VCC.Environment <> renv def
R10196:10199 VCC.Expressions <> heap syndef
R10213:10216 VCC.Environment <> genv def
R10505:10518 VCC.AssertionSemantics <> assert_entails def
R10667:10670 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10667:10670 Coq.Init.Logic <> :type_scope:x_'/\'_x not
sec 10738:10750 <> FreeFreshVars
def 11029:11037 <> fresh_var
R11049:11054 VCC.Expressions PSet t def
R11058:11065 Coq.Numbers.BinNums <> positive ind
R11080:11086 Coq.MSets.MSetPositive PositiveSet max_elt def
R11088:11095 VCC.AssertionSemantics <> set_vars var
R11109:11112 Coq.Init.Datatypes <> Some constr
R11120:11121 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R11129:11132 Coq.Init.Datatypes <> None constr
R11264:11273 Coq.MSets.MSetPositive PositiveSet union_spec thm
R11303:11316 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R11445:11454 Coq.MSets.MSetPositive PositiveSet union_spec thm
R11487:11511 Coq.Logic.Classical_Prop <> and_not_or thm
R11548:11561 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
def 11580:11588 <> free_vars
R11594:11602 VCC.AssertionSemantics <> assertion ind
R11606:11611 VCC.Expressions PSet t def
R11656:11656 VCC.AssertionSemantics <> A var
R11669:11673 VCC.AssertionSemantics <> Atrue constr
R11677:11682 VCC.AssertionSemantics <> Afalse constr
R11686:11690 Coq.MSets.MSetPositive PositiveSet empty def
R11686:11690 Coq.MSets.MSetPositive PositiveSet empty def
R11698:11701 VCC.AssertionSemantics <> Aand constr
R11712:11716 Coq.MSets.MSetPositive PositiveSet union def
R11734:11742 VCC.AssertionSemantics <> free_vars def
R11719:11727 VCC.AssertionSemantics <> free_vars def
R11754:11756 VCC.AssertionSemantics <> Aor constr
R11767:11771 Coq.MSets.MSetPositive PositiveSet union def
R11789:11797 VCC.AssertionSemantics <> free_vars def
R11774:11782 VCC.AssertionSemantics <> free_vars def
R11809:11812 VCC.AssertionSemantics <> Anot constr
R11820:11828 VCC.AssertionSemantics <> free_vars def
R11839:11845 VCC.AssertionSemantics <> Aexists constr
R11857:11865 VCC.AssertionSemantics <> free_vars def
R11877:11884 VCC.AssertionSemantics <> Agexists constr
R11894:11904 VCC.Expressions PSet remove def
R11909:11917 VCC.AssertionSemantics <> free_vars def
R11929:11936 VCC.AssertionSemantics <> Adefined constr
R11944:11948 Coq.MSets.MSetPositive PositiveSet empty def
R11956:11964 VCC.AssertionSemantics <> Agdefined constr
R11972:11980 Coq.MSets.MSetPositive PositiveSet singleton def
R11991:11996 VCC.AssertionSemantics <> Aalloc constr
R12003:12011 Coq.MSets.MSetPositive PositiveSet singleton def
R12022:12034 VCC.AssertionSemantics <> :assert_scope:'UPDATE' not
R12047:12051 Coq.MSets.MSetPositive PositiveSet union def
R12068:12072 Coq.MSets.MSetPositive PositiveSet union def
R12089:12097 Coq.MSets.MSetPositive PositiveSet singleton def
R12075:12083 Coq.MSets.MSetPositive PositiveSet singleton def
R12054:12062 Coq.MSets.MSetPositive PositiveSet singleton def
R12110:12121 VCC.AssertionSemantics <> Aexists_heap constr
R12129:12137 VCC.AssertionSemantics <> free_vars def
R12148:12158 VCC.AssertionSemantics <> Aequal_heap constr
R12166:12174 Coq.MSets.MSetPositive PositiveSet singleton def
R12185:12194 VCC.AssertionSemantics <> Aexpr_type constr
R12203:12207 Coq.MSets.MSetPositive PositiveSet empty def
R12215:12225 VCC.AssertionSemantics <> Agexpr_type constr
R12235:12248 VCC.Expressions <> free_vars_expr def
R12259:12265 VCC.AssertionSemantics <> Aref_eq constr
R12278:12282 Coq.MSets.MSetPositive PositiveSet union def
R12306:12319 VCC.Expressions <> free_vars_expr def
R12285:12298 VCC.Expressions <> free_vars_expr def
R12332:12334 VCC.AssertionSemantics <> Aeq constr
R12347:12351 Coq.MSets.MSetPositive PositiveSet union def
R12375:12388 VCC.Expressions <> free_vars_expr def
R12354:12367 VCC.Expressions <> free_vars_expr def
def 12418:12433 <> env_equiv_assert
R12438:12446 VCC.AssertionSemantics <> assertion ind
R12450:12457 Coq.Relations.Relation_Definitions <> relation def
R12459:12462 VCC.Environment <> genv def
R12522:12536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12537:12537 Coq.Init.Logic <> :type_scope:x_'='_x not
R12547:12551 Coq.Init.Logic <> :type_scope:x_'='_x not
R12561:12561 Coq.Init.Logic <> :type_scope:x_'='_x not
R12538:12541 VCC.Environment <> find def
R12546:12546 VCC.AssertionSemantics <> x var
R12543:12544 VCC.AssertionSemantics <> e1 var
R12552:12555 VCC.Environment <> find def
R12560:12560 VCC.AssertionSemantics <> x var
R12557:12558 VCC.AssertionSemantics <> e2 var
R12499:12505 VCC.Expressions PSet In def
R12510:12518 VCC.AssertionSemantics <> free_vars def
R12520:12520 VCC.AssertionSemantics <> P var
R12507:12507 VCC.AssertionSemantics <> x var
inst 12583:12609 <> Equivalenc_env_equiv_assert
R12628:12638 Coq.Classes.RelationClasses <> Equivalence class
R12641:12656 VCC.AssertionSemantics <> env_equiv_assert def
R12658:12660 VCC.AssertionSemantics <> ass var
prf 12818:12832 <> env_equiv_equiv
R12877:12886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12887:12902 VCC.AssertionSemantics <> env_equiv_assert def
R12910:12911 VCC.AssertionSemantics <> e2 var
R12907:12908 VCC.AssertionSemantics <> e1 var
R12904:12905 VCC.AssertionSemantics <> ex var
R12862:12870 VCC.Environment <> env_equiv def
R12875:12876 VCC.AssertionSemantics <> e2 var
R12872:12873 VCC.AssertionSemantics <> e1 var
prf 12966:12991 <> free_vars_env_equiv_assert
R13043:13052 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13072:13087 VCC.AssertionSemantics <> env_equiv_assert def
R13111:13111 VCC.AssertionSemantics <> e var
R13092:13101 VCC.Environment <> update_env def
R13107:13108 VCC.AssertionSemantics <> ov var
R13105:13105 VCC.AssertionSemantics <> k var
R13103:13103 VCC.AssertionSemantics <> e var
R13089:13089 VCC.AssertionSemantics <> P var
R13018:13019 Coq.Init.Logic <> :type_scope:'~'_x not
R13020:13026 VCC.Expressions PSet In def
R13031:13039 VCC.AssertionSemantics <> free_vars def
R13041:13041 VCC.AssertionSemantics <> P var
R13028:13028 VCC.AssertionSemantics <> k var
R13194:13196 compcert.lib.Coqlib <> peq def
R13242:13244 VCC.Environment <> gso thm
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13194:13196 compcert.lib.Coqlib <> peq def
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
R13242:13244 VCC.Environment <> gso thm
inst 13279:13303 <> Proper_eval_assert_assert
R13322:13327 Coq.Classes.Morphisms <> Proper class
R13412:13422 VCC.AssertionSemantics <> eval_assert def
R13424:13426 VCC.AssertionSemantics <> ass var
R13339:13343 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13330:13338 VCC.Environment <> env_equiv def
R13352:13356 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13344:13351 Coq.Init.Logic <> eq ind
R13377:13381 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R13357:13372 VCC.AssertionSemantics <> env_equiv_assert def
R13374:13376 VCC.AssertionSemantics <> ass var
R13382:13390 Coq.Init.Logic <> iff def
R13679:13683 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13679:13683 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13855:13870 VCC.AssertionSemantics <> env_equiv_assert def
R13855:13870 VCC.AssertionSemantics <> env_equiv_assert def
R13882:13897 VCC.AssertionSemantics <> env_equiv_assert def
R13882:13897 VCC.AssertionSemantics <> env_equiv_assert def
R13982:13996 VCC.Expressions PSet union_spec thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R13982:13996 VCC.Expressions PSet union_spec thm
R13982:13996 VCC.Expressions PSet union_spec thm
R13982:13996 VCC.Expressions PSet union_spec thm
R13982:13996 VCC.Expressions PSet union_spec thm
R13982:13996 VCC.Expressions PSet union_spec thm
R13982:13996 VCC.Expressions PSet union_spec thm
R13982:13996 VCC.Expressions PSet union_spec thm
R13982:13996 VCC.Expressions PSet union_spec thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14043:14059 VCC.AssertionSemantics <> forall_exists_iff thm
R14193:14195 compcert.lib.Coqlib <> peq def
R14236:14238 VCC.Environment <> gss thm
R14274:14276 VCC.Environment <> gso thm
R14193:14195 compcert.lib.Coqlib <> peq def
R14236:14238 VCC.Environment <> gss thm
R14236:14238 VCC.Environment <> gss thm
R14236:14238 VCC.Environment <> gss thm
R14236:14238 VCC.Environment <> gss thm
R14236:14238 VCC.Environment <> gss thm
R14274:14276 VCC.Environment <> gso thm
R14274:14276 VCC.Environment <> gso thm
R14274:14276 VCC.Environment <> gso thm
R14274:14276 VCC.Environment <> gso thm
R14274:14276 VCC.Environment <> gso thm
R14329:14344 VCC.Expressions PSet remove_spec thm
R14329:14344 VCC.Expressions PSet remove_spec thm
R14472:14485 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14472:14485 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14563:14576 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14563:14576 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14612:14628 VCC.AssertionSemantics <> forall_exists_iff thm
R14612:14628 VCC.AssertionSemantics <> forall_exists_iff thm
R14612:14628 VCC.AssertionSemantics <> forall_exists_iff thm
R14612:14628 VCC.AssertionSemantics <> forall_exists_iff thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14734:14743 Coq.MSets.MSetPositive PositiveSet union_spec thm
R14758:14771 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14842:14855 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14842:14855 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14842:14855 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R14962:14976 VCC.Expressions <> env_equiv_gexpr def
R14962:14976 VCC.Expressions <> env_equiv_gexpr def
R15032:15046 VCC.Expressions PSet union_spec thm
R15032:15046 VCC.Expressions PSet union_spec thm
R15076:15090 VCC.Expressions <> env_equiv_gexpr def
R15076:15090 VCC.Expressions <> env_equiv_gexpr def
R15147:15161 VCC.Expressions PSet union_spec thm
R15147:15161 VCC.Expressions PSet union_spec thm
R15279:15293 VCC.Expressions <> env_equiv_gexpr def
R15279:15293 VCC.Expressions <> env_equiv_gexpr def
R15349:15363 VCC.Expressions PSet union_spec thm
R15349:15363 VCC.Expressions PSet union_spec thm
R15393:15407 VCC.Expressions <> env_equiv_gexpr def
R15393:15407 VCC.Expressions <> env_equiv_gexpr def
R15464:15478 VCC.Expressions PSet union_spec thm
R15464:15478 VCC.Expressions PSet union_spec thm
prf 15601:15614 <> fresh_var_spec
R15644:15645 Coq.Init.Logic <> :type_scope:'~'_x not
R15646:15652 VCC.Expressions PSet In def
R15675:15682 VCC.AssertionSemantics <> set_vars var
R15655:15663 VCC.AssertionSemantics <> fresh_var def
R15665:15672 VCC.AssertionSemantics <> set_vars var
R15720:15728 VCC.AssertionSemantics <> fresh_var def
R15772:15778 Coq.MSets.MSetPositive PositiveSet max_elt def
R15772:15778 Coq.MSets.MSetPositive PositiveSet max_elt def
R15811:15828 VCC.Expressions PSet max_elt_spec2 thm
R15811:15828 VCC.Expressions PSet max_elt_spec2 thm
R15893:15895 Coq.MSets.MSetPositive PositiveSet elt def
R15961:15978 VCC.Expressions PSet max_elt_spec3 thm
R15961:15978 VCC.Expressions PSet max_elt_spec3 thm
prf 16066:16085 <> fresh_vars_spec_util
R16136:16144 VCC.AssertionSemantics <> fresh_var def
R16147:16151 Coq.MSets.MSetPositive PositiveSet union def
R16197:16201 Coq.MSets.MSetPositive PositiveSet union def
R16224:16232 Coq.MSets.MSetPositive PositiveSet singleton def
R16234:16234 VCC.AssertionSemantics <> x var
R16204:16217 VCC.Expressions <> free_vars_expr def
R16219:16220 VCC.AssertionSemantics <> ex var
R16154:16162 VCC.AssertionSemantics <> free_vars def
R16164:16166 VCC.AssertionSemantics <> phi var
R16279:16288 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16249:16250 Coq.Init.Logic <> :type_scope:'~'_x not
R16251:16257 VCC.Expressions PSet In def
R16265:16273 VCC.AssertionSemantics <> free_vars def
R16275:16277 VCC.AssertionSemantics <> phi var
R16259:16262 VCC.AssertionSemantics <> temp var
R16323:16332 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16289:16290 Coq.Init.Logic <> :type_scope:'~'_x not
R16291:16297 VCC.Expressions PSet In def
R16305:16318 VCC.Expressions <> free_vars_expr def
R16320:16321 VCC.AssertionSemantics <> ex var
R16299:16302 VCC.AssertionSemantics <> temp var
R16337:16340 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R16333:16336 VCC.AssertionSemantics <> temp var
R16341:16341 VCC.AssertionSemantics <> x var
R16381:16394 VCC.AssertionSemantics <> fresh_var_spec thm
R16397:16401 Coq.MSets.MSetPositive PositiveSet union def
R16420:16424 Coq.MSets.MSetPositive PositiveSet union def
R16447:16455 Coq.MSets.MSetPositive PositiveSet singleton def
R16427:16440 VCC.Expressions <> free_vars_expr def
R16404:16412 VCC.AssertionSemantics <> free_vars def
R16381:16394 VCC.AssertionSemantics <> fresh_var_spec thm
R16397:16401 Coq.MSets.MSetPositive PositiveSet union def
R16420:16424 Coq.MSets.MSetPositive PositiveSet union def
R16447:16455 Coq.MSets.MSetPositive PositiveSet singleton def
R16427:16440 VCC.Expressions <> free_vars_expr def
R16404:16412 VCC.AssertionSemantics <> free_vars def
R16482:16496 VCC.Expressions PSet union_spec thm
R16482:16496 VCC.Expressions PSet union_spec thm
R16482:16496 VCC.Expressions PSet union_spec thm
R16482:16496 VCC.Expressions PSet union_spec thm
R16482:16496 VCC.Expressions PSet union_spec thm
R16514:16538 Coq.Logic.Classical_Prop <> not_or_and thm
R16514:16538 Coq.Logic.Classical_Prop <> not_or_and thm
R16577:16601 Coq.Logic.Classical_Prop <> not_or_and thm
R16577:16601 Coq.Logic.Classical_Prop <> not_or_and thm
R16700:16718 VCC.Expressions PSet singleton_spec thm
R16700:16718 VCC.Expressions PSet singleton_spec thm
R16700:16718 VCC.Expressions PSet singleton_spec thm
prf 16743:16758 <> expr_type_update
R16817:16827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16897:16926 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16852:16861 VCC.AssertionSemantics <> gexpr_type def
R16895:16896 VCC.AssertionSemantics <> ty var
R16872:16881 VCC.Environment <> update_env def
R16889:16892 VCC.AssertionSemantics <> v_ty var
R16887:16887 VCC.AssertionSemantics <> k var
R16883:16885 VCC.AssertionSemantics <> ghe var
R16869:16869 VCC.AssertionSemantics <> h var
R16867:16867 VCC.AssertionSemantics <> e var
R16863:16865 VCC.AssertionSemantics <> gex var
R16927:16936 VCC.AssertionSemantics <> gexpr_type def
R16950:16951 VCC.AssertionSemantics <> ty var
R16946:16948 VCC.AssertionSemantics <> ghe var
R16944:16944 VCC.AssertionSemantics <> h var
R16942:16942 VCC.AssertionSemantics <> e var
R16938:16940 VCC.AssertionSemantics <> gex var
R16785:16786 Coq.Init.Logic <> :type_scope:'~'_x not
R16787:16793 VCC.Expressions PSet In def
R16798:16811 VCC.Expressions <> free_vars_expr def
R16813:16815 VCC.AssertionSemantics <> gex var
R16795:16795 VCC.AssertionSemantics <> k var
R16982:17000 VCC.Expressions <> free_vars_env_equiv thm
R16982:17000 VCC.Expressions <> free_vars_env_equiv thm
prf 17048:17063 <> eval_expr_update
R17122:17132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17205:17217 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17163:17172 VCC.Expressions <> eval_gexpr def
R17204:17204 VCC.AssertionSemantics <> v var
R17183:17192 VCC.Environment <> update_env def
R17200:17201 VCC.AssertionSemantics <> v' var
R17198:17198 VCC.AssertionSemantics <> k var
R17194:17196 VCC.AssertionSemantics <> ghe var
R17180:17180 VCC.AssertionSemantics <> h var
R17178:17178 VCC.AssertionSemantics <> e var
R17174:17176 VCC.AssertionSemantics <> gex var
R17218:17227 VCC.Expressions <> eval_gexpr def
R17241:17241 VCC.AssertionSemantics <> v var
R17237:17239 VCC.AssertionSemantics <> ghe var
R17235:17235 VCC.AssertionSemantics <> h var
R17233:17233 VCC.AssertionSemantics <> e var
R17229:17231 VCC.AssertionSemantics <> gex var
R17090:17091 Coq.Init.Logic <> :type_scope:'~'_x not
R17092:17098 VCC.Expressions PSet In def
R17103:17116 VCC.Expressions <> free_vars_expr def
R17118:17120 VCC.AssertionSemantics <> gex var
R17100:17100 VCC.AssertionSemantics <> k var
R17272:17290 VCC.Expressions <> free_vars_env_equiv thm
R17272:17290 VCC.Expressions <> free_vars_env_equiv thm
prf 17338:17353 <> free_vars_update
R17407:17417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17485:17497 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17445:17455 VCC.AssertionSemantics <> eval_assert def
R17466:17475 VCC.Environment <> update_env def
R17483:17483 VCC.AssertionSemantics <> v var
R17481:17481 VCC.AssertionSemantics <> k var
R17477:17479 VCC.AssertionSemantics <> ghe var
R17463:17463 VCC.AssertionSemantics <> h var
R17461:17461 VCC.AssertionSemantics <> e var
R17457:17459 VCC.AssertionSemantics <> phi var
R17498:17508 VCC.AssertionSemantics <> eval_assert def
R17518:17520 VCC.AssertionSemantics <> ghe var
R17516:17516 VCC.AssertionSemantics <> h var
R17514:17514 VCC.AssertionSemantics <> e var
R17510:17512 VCC.AssertionSemantics <> phi var
R17380:17381 Coq.Init.Logic <> :type_scope:'~'_x not
R17382:17388 VCC.Expressions PSet In def
R17393:17401 VCC.AssertionSemantics <> free_vars def
R17403:17405 VCC.AssertionSemantics <> phi var
R17390:17390 VCC.AssertionSemantics <> k var
R17551:17576 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R17551:17576 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R17620:17632 VCC.AssertionSemantics FreeFreshVars <> sec
R17836:17839 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17823:17831 VCC.AssertionSemantics <> fresh_var def
R17836:17839 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17823:17831 VCC.AssertionSemantics <> fresh_var def
R17891:17904 VCC.AssertionSemantics <> fresh_var_spec thm
R18213:18215 Coq.Init.Logic <> :type_scope:x_'='_x not
R18203:18206 VCC.Environment <> find def
R18216:18219 Coq.Init.Datatypes <> Some constr
R18213:18215 Coq.Init.Logic <> :type_scope:x_'='_x not
R18203:18206 VCC.Environment <> find def
R18216:18219 Coq.Init.Datatypes <> Some constr
R18238:18240 Coq.Init.Logic <> :type_scope:x_'='_x not
R18228:18231 VCC.Environment <> find def
R18241:18244 Coq.Init.Datatypes <> Some constr
R18238:18240 Coq.Init.Logic <> :type_scope:x_'='_x not
R18228:18231 VCC.Environment <> find def
R18241:18244 Coq.Init.Datatypes <> Some constr
R18322:18324 Coq.Init.Logic <> :type_scope:x_'='_x not
R18314:18317 VCC.Environment <> find def
R18322:18324 Coq.Init.Logic <> :type_scope:x_'='_x not
R18314:18317 VCC.Environment <> find def
R18425:18427 Coq.Init.Logic <> :type_scope:x_'='_x not
R18417:18420 VCC.Environment <> find def
R18428:18431 Coq.Init.Datatypes <> Some constr
R18425:18427 Coq.Init.Logic <> :type_scope:x_'='_x not
R18417:18420 VCC.Environment <> find def
R18428:18431 Coq.Init.Datatypes <> Some constr
R18473:18475 VCC.Environment <> gss thm
R18492:18494 VCC.Environment <> gso thm
R18359:18361 VCC.Environment <> gss thm
R18373:18375 VCC.Environment <> gso thm
R18660:18661 Coq.Init.Logic <> :type_scope:'~'_x not
R18662:18668 VCC.Expressions PSet In def
R18671:18679 VCC.AssertionSemantics <> fresh_var def
R18660:18661 Coq.Init.Logic <> :type_scope:'~'_x not
R18662:18668 VCC.Expressions PSet In def
R18671:18679 VCC.AssertionSemantics <> fresh_var def
R18737:18750 VCC.AssertionSemantics <> fresh_var_spec thm
R18936:18945 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R18978:18991 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R19044:19057 VCC.AssertionSemantics <> fresh_var_spec thm
R19235:19253 VCC.Expressions <> free_vars_env_equiv thm
R19302:19312 VCC.Environment <> update_comm thm
R19367:19385 VCC.Expressions <> free_vars_env_equiv thm
R19434:19449 VCC.Environment <> redundant_update thm
R19542:19560 VCC.Expressions <> free_vars_env_equiv thm
R19614:19624 VCC.Environment <> update_comm thm
R19684:19702 VCC.Expressions <> free_vars_env_equiv thm
R19756:19771 VCC.Environment <> redundant_update thm
R19883:19892 VCC.Expressions <> eval_gexpr def
R19883:19892 VCC.Expressions <> eval_gexpr def
R19963:19974 VCC.Expressions <> eval_glvalue def
R19963:19974 VCC.Expressions <> eval_glvalue def
R20045:20054 VCC.Expressions <> eval_gexpr def
R20045:20054 VCC.Expressions <> eval_gexpr def
R20137:20148 VCC.Expressions <> eval_glvalue def
R20137:20148 VCC.Expressions <> eval_glvalue def
R20368:20393 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R20442:20452 VCC.Environment <> update_comm thm
R20507:20532 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R20581:20596 VCC.Environment <> redundant_update thm
R20629:20644 VCC.Environment <> pointless_update thm
R20759:20784 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R20838:20848 VCC.Environment <> update_comm thm
R20908:20933 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R20986:21001 VCC.Environment <> redundant_update thm
R21039:21054 VCC.Environment <> pointless_update thm
R21191:21201 VCC.AssertionSemantics <> eval_assert def
R21191:21201 VCC.AssertionSemantics <> eval_assert def
R21276:21286 VCC.AssertionSemantics <> eval_assert def
R21276:21286 VCC.AssertionSemantics <> eval_assert def
