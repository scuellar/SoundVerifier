DIGEST 57cd3f24d4c2e737970137bc8ffa7dcf
FVCC.verifier
R15:33 compcert.lib.Coqlib <> <> lib
R51:71 compcert.lib.Integers <> <> lib
R91:106 Coq.Program.Equality <> <> lib
R125:142 Coq.MSets.MSetPositive <> <> lib
R179:189 Coq.MSets.MSetPositive PositiveSet <> modtype
mod 172:175 <> PSet
R237:257 Coq.Classes.Morphisms <> <> lib
R276:285 VCC.Basics <> <> lib
R318:332 VCC.Expressions <> <> lib
R350:364 VCC.Environment <> <> lib
R382:389 VCC.Heap <> <> lib
R407:419 VCC.Semantics <> <> lib
R437:458 VCC.AssertionSemantics <> <> lib
R497:516 Coq.Relations.Relation_Definitions <> <> lib
def 530:536 <> neq_rel
R548:555 Coq.Relations.Relation_Definitions <> relation def
R557:557 VCC.verifier <> A var
R572:572 VCC.verifier <> A var
R579:582 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R578:578 VCC.verifier <> x var
R583:583 VCC.verifier <> y var
inst 602:614 <> Symmetric_neq
R630:638 Coq.Classes.RelationClasses <> Symmetric class
R643:649 VCC.verifier <> neq_rel def
R651:651 VCC.verifier <> A var
R640:640 VCC.verifier <> A var
sec 830:838 <> Evaluator
def 890:908 <> assert_expr_defined
R914:917 VCC.Expressions <> expr ind
R921:929 VCC.AssertionSemantics <> assertion ind
R941:942 VCC.verifier <> ex var
R953:962 VCC.Expressions <> Econst_int constr
R969:973 VCC.AssertionSemantics <> Atrue constr
R979:986 VCC.Expressions <> Etempvar constr
R994:1001 VCC.AssertionSemantics <> Adefined constr
R1010:1015 VCC.Expressions <> Ederef constr
R1036:1044 VCC.AssertionSemantics <> fresh_var def
R1046:1050 Coq.MSets.MSetPositive PositiveSet empty def
R1091:1094 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R1060:1067 VCC.AssertionSemantics <> Agexists constr
R1072:1072 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1083:1086 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1073:1080 VCC.Expressions <> Etempvar constr
R1082:1082 VCC.verifier <> p var
R1069:1069 VCC.verifier <> p var
R1095:1100 VCC.AssertionSemantics <> Aalloc constr
R1102:1102 VCC.verifier <> p var
def 1139:1158 <> assert_gexpr_defined
R1164:1168 VCC.Expressions <> gexpr ind
R1172:1180 VCC.AssertionSemantics <> assertion ind
R1192:1193 VCC.verifier <> ex var
R1204:1208 VCC.Expressions <> Rexpr constr
R1217:1235 VCC.verifier <> assert_expr_defined def
R1245:1255 VCC.Expressions <> GEconst_ptr constr
R1275:1283 VCC.AssertionSemantics <> fresh_var def
R1285:1289 Coq.MSets.MSetPositive PositiveSet empty def
R1342:1345 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R1299:1306 VCC.AssertionSemantics <> Agexists constr
R1312:1312 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1324:1327 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1313:1320 VCC.Expressions <> Etempvar constr
R1322:1323 VCC.verifier <> xp var
R1328:1338 VCC.Expressions <> GEconst_ptr constr
R1308:1309 VCC.verifier <> xp var
R1346:1351 VCC.AssertionSemantics <> Aalloc constr
R1353:1354 VCC.verifier <> xp var
R1369:1379 VCC.Expressions <> GEconst_nat constr
R1386:1390 VCC.AssertionSemantics <> Atrue constr
R1396:1407 VCC.Expressions <> GEconst_bool constr
R1414:1418 VCC.AssertionSemantics <> Atrue constr
R1424:1432 VCC.Expressions <> GEtempvar constr
R1440:1448 VCC.AssertionSemantics <> Agdefined constr
R1457:1463 VCC.Expressions <> GEderef constr
R1486:1494 VCC.AssertionSemantics <> fresh_var def
R1496:1500 Coq.MSets.MSetPositive PositiveSet empty def
R1543:1546 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R1510:1517 VCC.AssertionSemantics <> Agexists constr
R1523:1523 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1535:1538 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1524:1531 VCC.Expressions <> Etempvar constr
R1533:1534 VCC.verifier <> xp var
R1519:1520 VCC.verifier <> xp var
R1547:1552 VCC.AssertionSemantics <> Aalloc constr
R1554:1555 VCC.verifier <> xp var
def 1582:1602 <> assert_lvalue_defined
R1608:1611 VCC.Expressions <> expr ind
R1615:1623 VCC.AssertionSemantics <> assertion ind
R1635:1636 VCC.verifier <> ex var
R1647:1656 VCC.Expressions <> Econst_int constr
R1663:1668 VCC.AssertionSemantics <> Afalse constr
R1674:1681 VCC.Expressions <> Etempvar constr
R1689:1694 VCC.AssertionSemantics <> Afalse constr
R1700:1705 VCC.Expressions <> Ederef constr
R1727:1735 VCC.AssertionSemantics <> fresh_var def
R1737:1741 Coq.MSets.MSetPositive PositiveSet empty def
R1751:1758 VCC.AssertionSemantics <> Agexists constr
R1764:1764 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1776:1779 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1765:1772 VCC.Expressions <> Etempvar constr
R1774:1775 VCC.verifier <> xp var
R1760:1761 VCC.verifier <> xp var
def 1912:1920 <> bool_true
R1926:1929 VCC.Expressions <> expr ind
R1932:1940 VCC.AssertionSemantics <> assertion ind
R1947:1948 VCC.AssertionSemantics <> :assert_scope:'~'_x not
R1968:1972 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R1949:1958 VCC.Expressions <> Econst_int constr
R1960:1967 compcert.lib.Integers Int zero def
R1973:1974 VCC.verifier <> ex var
def 1996:2005 <> bool_false
R2011:2014 VCC.Expressions <> expr ind
R2017:2025 VCC.AssertionSemantics <> assertion ind
R2051:2055 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R2032:2041 VCC.Expressions <> Econst_int constr
R2043:2050 compcert.lib.Integers Int zero def
R2056:2057 VCC.verifier <> ex var
def 2335:2359 <> ghost_minimal_weakest_pre
R2367:2376 VCC.Semantics <> gstatement ind
R2404:2412 VCC.AssertionSemantics <> assertion ind
R2457:2460 VCC.verifier <> gstm var
R2471:2476 VCC.Semantics <> GSskip constr
R2481:2485 VCC.AssertionSemantics <> Atrue constr
R2491:2495 VCC.Semantics <> GSset constr
R2507:2526 VCC.verifier <> assert_gexpr_defined def
R2543:2547 VCC.Semantics <> GSseq constr
R2558:2582 VCC.verifier <> ghost_minimal_weakest_pre def
def 2605:2629 <> minimal_weakest_pre_ghost
R2637:2646 VCC.Semantics <> gstatement ind
R2649:2657 VCC.AssertionSemantics <> assertion ind
R2702:2705 VCC.verifier <> gstm var
R2716:2721 VCC.Semantics <> GSskip constr
R2726:2730 VCC.AssertionSemantics <> Atrue constr
R2736:2740 VCC.Semantics <> GSset constr
R2751:2770 VCC.verifier <> assert_gexpr_defined def
R2787:2791 VCC.Semantics <> GSseq constr
R2800:2824 VCC.verifier <> minimal_weakest_pre_ghost def
def 2845:2863 <> minimal_weakest_pre
R2870:2878 VCC.Semantics <> statement ind
R2906:2914 VCC.AssertionSemantics <> assertion ind
R2959:2961 VCC.verifier <> stm var
R2972:2976 VCC.Semantics <> Sskip constr
R2981:2985 VCC.AssertionSemantics <> Atrue constr
R2991:2994 VCC.Semantics <> Sset constr
R3006:3024 VCC.verifier <> assert_expr_defined def
R3041:3047 VCC.Semantics <> Sassign constr
R3091:3099 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R3066:3086 VCC.verifier <> assert_lvalue_defined def
R3100:3118 VCC.verifier <> assert_expr_defined def
R3136:3139 VCC.Semantics <> Sseq constr
R3149:3167 VCC.verifier <> minimal_weakest_pre def
R3175:3185 VCC.Semantics <> Sifthenelse constr
R3240:3258 VCC.verifier <> assert_expr_defined def
R3358:3362 VCC.Semantics <> Sloop constr
R3388:3393 VCC.Semantics <> Sbreak constr
R3398:3402 VCC.AssertionSemantics <> Atrue constr
R3408:3416 VCC.Semantics <> Scontinue constr
R3421:3425 VCC.AssertionSemantics <> Atrue constr
R3431:3436 VCC.Semantics <> Sghost constr
R3446:3470 VCC.verifier <> minimal_weakest_pre_ghost def
R3481:3487 VCC.Semantics <> Sassert constr
R3500:3506 VCC.Semantics <> Sassume constr
R3513:3517 VCC.AssertionSemantics <> Atrue constr
syndef 3536:3546 <> obligations
R3551:3554 Coq.Init.Datatypes <> list ind
R3566:3568 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R3557:3565 VCC.AssertionSemantics <> assertion ind
R3569:3577 VCC.AssertionSemantics <> assertion ind
def 3627:3646 <> strongest_post_ghost
R3653:3661 VCC.AssertionSemantics <> assertion ind
R3669:3678 VCC.Semantics <> gstatement ind
R3682:3690 VCC.AssertionSemantics <> assertion ind
R3702:3705 VCC.verifier <> gstm var
R3716:3721 VCC.Semantics <> GSskip constr
R3726:3728 VCC.verifier <> phi var
R3734:3738 VCC.Semantics <> GSset constr
R3764:3772 VCC.AssertionSemantics <> fresh_var def
R3775:3779 Coq.MSets.MSetPositive PositiveSet union def
R3798:3802 Coq.MSets.MSetPositive PositiveSet union def
R3825:3833 Coq.MSets.MSetPositive PositiveSet singleton def
R3805:3818 VCC.Expressions <> free_vars_expr def
R3782:3790 VCC.AssertionSemantics <> free_vars def
R3792:3794 VCC.verifier <> phi var
R3848:3855 VCC.AssertionSemantics <> Agexists constr
R3875:3875 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R3904:3909 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R3951:3951 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R3886:3889 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R3876:3883 VCC.Expressions <> Etempvar constr
R3890:3898 VCC.Expressions <> GEtempvar constr
R3900:3903 VCC.verifier <> temp var
R3910:3916 VCC.AssertionSemantics <> Aexists constr
R3921:3921 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R3942:3946 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R3936:3939 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R3922:3930 VCC.Expressions <> GEtempvar constr
R3932:3935 VCC.verifier <> temp var
R3947:3949 VCC.verifier <> phi var
R3857:3860 VCC.verifier <> temp var
R3965:3969 VCC.Semantics <> GSseq constr
R3984:4003 VCC.verifier <> strongest_post_ghost def
R4006:4025 VCC.verifier <> strongest_post_ghost def
R4027:4029 VCC.verifier <> phi var
def 4059:4072 <> strongest_post
R4079:4087 VCC.AssertionSemantics <> assertion ind
R4094:4102 VCC.Semantics <> statement ind
R4106:4114 VCC.AssertionSemantics <> assertion ind
R4126:4128 VCC.verifier <> stm var
R4139:4143 VCC.Semantics <> Sskip constr
R4149:4151 VCC.verifier <> phi var
R4157:4160 VCC.Semantics <> Sset constr
R4250:4258 VCC.AssertionSemantics <> fresh_var def
R4261:4265 Coq.MSets.MSetPositive PositiveSet union def
R4284:4288 Coq.MSets.MSetPositive PositiveSet union def
R4311:4319 Coq.MSets.MSetPositive PositiveSet singleton def
R4291:4304 VCC.Expressions <> free_vars_expr def
R4268:4276 VCC.AssertionSemantics <> free_vars def
R4278:4280 VCC.verifier <> phi var
R4334:4341 VCC.AssertionSemantics <> Agexists constr
R4361:4361 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4390:4395 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4437:4437 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4372:4375 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R4362:4369 VCC.Expressions <> Etempvar constr
R4376:4384 VCC.Expressions <> GEtempvar constr
R4386:4389 VCC.verifier <> temp var
R4396:4402 VCC.AssertionSemantics <> Aexists constr
R4407:4407 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4428:4432 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4422:4425 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R4408:4416 VCC.Expressions <> GEtempvar constr
R4418:4421 VCC.verifier <> temp var
R4433:4435 VCC.verifier <> phi var
R4343:4346 VCC.verifier <> temp var
R4451:4457 VCC.Semantics <> Sassign constr
R4487:4495 VCC.AssertionSemantics <> fresh_var def
R4498:4506 VCC.AssertionSemantics <> free_vars def
R4508:4510 VCC.verifier <> phi var
R4528:4536 VCC.AssertionSemantics <> fresh_var def
R4539:4543 Coq.MSets.MSetPositive PositiveSet union def
R4565:4569 Coq.MSets.MSetPositive PositiveSet union def
R4593:4601 VCC.AssertionSemantics <> free_vars def
R4603:4605 VCC.verifier <> phi var
R4572:4585 VCC.Expressions <> free_vars_expr def
R4546:4554 Coq.MSets.MSetPositive PositiveSet singleton def
R4556:4561 VCC.verifier <> h_temp var
R4625:4633 VCC.AssertionSemantics <> fresh_var def
R4636:4640 Coq.MSets.MSetPositive PositiveSet union def
R4657:4661 Coq.MSets.MSetPositive PositiveSet union def
R4683:4687 Coq.MSets.MSetPositive PositiveSet union def
R4711:4715 Coq.MSets.MSetPositive PositiveSet union def
R4739:4747 VCC.AssertionSemantics <> free_vars def
R4749:4751 VCC.verifier <> phi var
R4718:4731 VCC.Expressions <> free_vars_expr def
R4690:4703 VCC.Expressions <> free_vars_expr def
R4664:4672 Coq.MSets.MSetPositive PositiveSet singleton def
R4674:4679 VCC.verifier <> h_temp var
R4643:4651 Coq.MSets.MSetPositive PositiveSet singleton def
R4653:4653 VCC.verifier <> v var
R4765:4772 VCC.AssertionSemantics <> Agexists constr
R4815:4832 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4790:4796 VCC.AssertionSemantics <> Aref_eq constr
R4803:4811 VCC.Expressions <> GEtempvar constr
R4813:4813 VCC.verifier <> p var
R4833:4840 VCC.AssertionSemantics <> Agexists constr
R4886:4913 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4879:4882 VCC.AssertionSemantics <> :assert_scope:x_'=='_x not
R4868:4876 VCC.Expressions <> GEtempvar constr
R4878:4878 VCC.verifier <> v var
R4914:4921 VCC.AssertionSemantics <> Agexists constr
R4982:5019 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R4964:4974 VCC.AssertionSemantics <> Aequal_heap constr
R4976:4981 VCC.verifier <> h_temp var
R5020:5031 VCC.AssertionSemantics <> Aexists_heap constr
R5094:5097 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R5077:5082 VCC.AssertionSemantics <> :assert_scope:'UPDATE' not
R5088:5093 VCC.verifier <> h_temp var
R5086:5086 VCC.verifier <> v var
R5084:5084 VCC.verifier <> p var
R5098:5100 VCC.verifier <> phi var
R4923:4928 VCC.verifier <> h_temp var
R4842:4842 VCC.verifier <> v var
R4774:4774 VCC.verifier <> p var
R5117:5122 VCC.Semantics <> Sghost constr
R5132:5151 VCC.verifier <> strongest_post_ghost def
R5153:5155 VCC.verifier <> phi var
R5166:5169 VCC.Semantics <> Sseq constr
R5184:5197 VCC.verifier <> strongest_post def
R5200:5213 VCC.verifier <> strongest_post def
R5215:5217 VCC.verifier <> phi var
R5234:5244 VCC.Semantics <> Sifthenelse constr
R5478:5482 VCC.AssertionSemantics <> :assert_scope:x_'\/'_x not
R5439:5452 VCC.verifier <> strongest_post def
R5467:5470 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R5455:5463 VCC.verifier <> bool_true def
R5471:5473 VCC.verifier <> phi var
R5483:5496 VCC.verifier <> strongest_post def
R5512:5515 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R5499:5508 VCC.verifier <> bool_false def
R5516:5518 VCC.verifier <> phi var
R5536:5540 VCC.Semantics <> Sloop constr
R5565:5570 VCC.Semantics <> Sbreak constr
R5575:5580 VCC.AssertionSemantics <> Afalse constr
R5586:5594 VCC.Semantics <> Scontinue constr
R5599:5604 VCC.AssertionSemantics <> Afalse constr
R5610:5616 VCC.Semantics <> Sassert constr
R5624:5627 VCC.AssertionSemantics <> Aand constr
R5631:5633 VCC.verifier <> phi var
R5640:5646 VCC.Semantics <> Sassume constr
R5654:5657 VCC.AssertionSemantics <> Aand constr
R5661:5663 VCC.verifier <> phi var
def 5683:5704 <> gstatement_obligations
R5711:5719 VCC.AssertionSemantics <> assertion ind
R5727:5736 VCC.Semantics <> gstatement ind
R5740:5750 VCC.verifier <> obligations syndef
R5762:5765 VCC.verifier <> gstm var
R5776:5781 VCC.Semantics <> GSskip constr
R5786:5788 Coq.Init.Datatypes <> nil constr
R5794:5798 VCC.Semantics <> GSset constr
R5845:5846 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5808:5808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5812:5813 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5844:5844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5809:5811 VCC.verifier <> phi var
R5814:5838 VCC.verifier <> minimal_weakest_pre_ghost def
R5840:5843 VCC.verifier <> gstm var
R5847:5849 Coq.Init.Datatypes <> nil constr
R5855:5859 VCC.Semantics <> GSseq constr
R5908:5911 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5876:5897 VCC.verifier <> gstatement_obligations def
R5899:5901 VCC.verifier <> phi var
R5912:5933 VCC.verifier <> gstatement_obligations def
R5936:5955 VCC.verifier <> strongest_post_ghost def
R5957:5959 VCC.verifier <> phi var
def 6202:6222 <> statement_obligations
R6229:6237 VCC.AssertionSemantics <> assertion ind
R6244:6252 VCC.Semantics <> statement ind
R6267:6269 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6258:6266 VCC.AssertionSemantics <> assertion ind
R6270:6278 VCC.AssertionSemantics <> assertion ind
R6282:6292 VCC.verifier <> obligations syndef
R6302:6304 VCC.verifier <> stm var
R6313:6317 VCC.Semantics <> Sskip constr
R6322:6324 Coq.Init.Datatypes <> nil constr
R6328:6331 VCC.Semantics <> Sset constr
R6372:6373 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6342:6342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6346:6347 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6371:6371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6343:6345 VCC.verifier <> phi var
R6348:6366 VCC.verifier <> minimal_weakest_pre def
R6368:6370 VCC.verifier <> stm var
R6374:6376 Coq.Init.Datatypes <> nil constr
R6380:6386 VCC.Semantics <> Sassign constr
R6399:6401 Coq.Init.Datatypes <> nil constr
R6405:6410 VCC.Semantics <> Sghost constr
R6420:6441 VCC.verifier <> gstatement_obligations def
R6443:6445 VCC.verifier <> phi var
R6454:6457 VCC.Semantics <> Sseq constr
R6504:6507 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6472:6492 VCC.verifier <> statement_obligations def
R6503:6503 VCC.verifier <> I var
R6494:6496 VCC.verifier <> phi var
R6508:6528 VCC.verifier <> statement_obligations def
R6561:6561 VCC.verifier <> I var
R6531:6544 VCC.verifier <> strongest_post def
R6546:6548 VCC.verifier <> phi var
R6565:6575 VCC.Semantics <> Sifthenelse constr
R6621:6622 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6591:6591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6595:6596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6620:6620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6592:6594 VCC.verifier <> phi var
R6597:6615 VCC.verifier <> minimal_weakest_pre def
R6617:6619 VCC.verifier <> stm var
R6673:6701 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6751:6751 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6624:6644 VCC.verifier <> statement_obligations def
R6659:6662 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R6647:6655 VCC.verifier <> bool_true def
R6663:6665 VCC.verifier <> phi var
R6672:6672 VCC.verifier <> I var
R6702:6722 VCC.verifier <> statement_obligations def
R6750:6750 VCC.verifier <> I var
R6738:6741 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R6725:6734 VCC.verifier <> bool_false def
R6742:6744 VCC.verifier <> phi var
R6755:6759 VCC.Semantics <> Sloop constr
R6785:6786 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6776:6776 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6780:6781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6784:6784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6777:6779 VCC.verifier <> phi var
R6813:6814 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6787:6787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6808:6809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6812:6812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6788:6801 VCC.verifier <> strongest_post def
R6850:6884 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6815:6835 VCC.verifier <> statement_obligations def
R6843:6843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6846:6846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6849:6849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6911:6912 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6885:6885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6906:6907 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6910:6910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6886:6899 VCC.verifier <> strongest_post def
R6913:6933 VCC.verifier <> statement_obligations def
R6941:6941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6948:6948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6951:6951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6942:6947 VCC.AssertionSemantics <> Afalse constr
R6955:6960 VCC.Semantics <> Sbreak constr
R6977:6978 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6965:6965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6969:6970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6976:6976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6966:6968 VCC.verifier <> phi var
R6971:6973 Coq.Init.Datatypes <> snd def
R6975:6975 VCC.verifier <> I var
R6979:6981 Coq.Init.Datatypes <> nil constr
R6985:6993 VCC.Semantics <> Scontinue constr
R7010:7011 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6998:6998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7002:7003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7009:7009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6999:7001 VCC.verifier <> phi var
R7004:7006 Coq.Init.Datatypes <> fst def
R7008:7008 VCC.verifier <> I var
R7012:7014 Coq.Init.Datatypes <> nil constr
R7018:7024 VCC.Semantics <> Sassert constr
R7038:7039 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7031:7031 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7035:7035 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7037:7037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7032:7034 VCC.verifier <> phi var
R7040:7042 Coq.Init.Datatypes <> nil constr
R7046:7052 VCC.Semantics <> Sassume constr
R7059:7061 Coq.Init.Datatypes <> nil constr
def 7085:7103 <> get_loop_invariants
R7108:7111 VCC.Semantics <> cont ind
R7124:7126 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R7115:7123 VCC.AssertionSemantics <> assertion ind
R7127:7135 VCC.AssertionSemantics <> assertion ind
R7147:7147 VCC.verifier <> k var
R7158:7162 VCC.Semantics <> Kstop constr
R7167:7167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7174:7175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7182:7182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7168:7173 VCC.AssertionSemantics <> Afalse constr
R7176:7181 VCC.AssertionSemantics <> Afalse constr
R7188:7191 VCC.Semantics <> Kseq constr
R7203:7221 VCC.verifier <> get_loop_invariants def
R7230:7235 VCC.Semantics <> Kloop1 constr
R7254:7254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7257:7258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7261:7261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7267:7272 VCC.Semantics <> Kloop2 constr
R7291:7291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7298:7299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7302:7302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7292:7297 VCC.AssertionSemantics <> Afalse constr
R7364:7368 VCC.Semantics <> GKseq constr
R7381:7399 VCC.verifier <> get_loop_invariants def
def 7422:7433 <> skip_to_loop
R7438:7441 VCC.Semantics <> cont ind
R7445:7448 VCC.Semantics <> cont ind
R7460:7460 VCC.verifier <> k var
R7471:7475 VCC.Semantics <> Kstop constr
R7480:7480 VCC.verifier <> k var
R7486:7491 VCC.Semantics <> Kloop1 constr
R7506:7506 VCC.verifier <> k var
R7512:7517 VCC.Semantics <> Kloop2 constr
R7532:7532 VCC.verifier <> k var
R7538:7541 VCC.Semantics <> Kseq constr
R7551:7562 VCC.verifier <> skip_to_loop def
R7571:7575 VCC.Semantics <> GKseq constr
R7585:7596 VCC.verifier <> skip_to_loop def
def 7620:7628 <> next_cont
R7635:7643 VCC.Semantics <> statement ind
R7648:7651 VCC.Semantics <> cont ind
R7655:7658 VCC.Semantics <> cont ind
R7669:7671 VCC.verifier <> stm var
R7681:7686 VCC.Semantics <> Sbreak constr
R7690:7698 VCC.Semantics <> Scontinue constr
R7703:7714 VCC.verifier <> skip_to_loop def
R7716:7716 VCC.verifier <> k var
R7703:7714 VCC.verifier <> skip_to_loop def
R7716:7716 VCC.verifier <> k var
R7726:7726 VCC.verifier <> k var
def 7744:7767 <> continuation_obligations
R7774:7782 VCC.AssertionSemantics <> assertion ind
R7787:7790 VCC.Semantics <> cont ind
R7805:7815 VCC.verifier <> obligations syndef
R7828:7828 VCC.verifier <> k var
R7839:7843 VCC.Semantics <> Kstop constr
R7848:7850 Coq.Init.Datatypes <> nil constr
R7856:7859 VCC.Semantics <> Kseq constr
R7928:7958 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8012:8012 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R7875:7895 VCC.verifier <> statement_obligations def
R7906:7924 VCC.verifier <> get_loop_invariants def
R7926:7926 VCC.verifier <> k var
R7897:7899 VCC.verifier <> phi var
R7959:7982 VCC.verifier <> continuation_obligations def
R7985:7998 VCC.verifier <> strongest_post def
R8000:8002 VCC.verifier <> phi var
R8018:8023 VCC.Semantics <> Kloop1 constr
R8044:8049 VCC.Semantics <> Kloop2 constr
R8080:8081 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8072:8072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8076:8076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8079:8079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8073:8075 VCC.verifier <> phi var
R8108:8109 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8082:8082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8103:8104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8107:8107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8083:8096 VCC.verifier <> strongest_post def
R8145:8159 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8110:8130 VCC.verifier <> statement_obligations def
R8138:8138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8141:8141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8144:8144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8186:8187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8160:8160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8181:8182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8185:8185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8161:8174 VCC.verifier <> strongest_post def
R8227:8230 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8188:8208 VCC.verifier <> statement_obligations def
R8216:8216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8223:8223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8226:8226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8217:8222 VCC.AssertionSemantics <> Afalse constr
R8231:8254 VCC.verifier <> continuation_obligations def
R8259:8259 VCC.verifier <> k var
R8080:8081 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8072:8072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8076:8076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8079:8079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8073:8075 VCC.verifier <> phi var
R8108:8109 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8082:8082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8103:8104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8107:8107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8083:8096 VCC.verifier <> strongest_post def
R8145:8159 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8110:8130 VCC.verifier <> statement_obligations def
R8138:8138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8141:8141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8144:8144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8186:8187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8160:8160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8181:8182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8185:8185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8161:8174 VCC.verifier <> strongest_post def
R8227:8230 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8188:8208 VCC.verifier <> statement_obligations def
R8216:8216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8223:8223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8226:8226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8217:8222 VCC.AssertionSemantics <> Afalse constr
R8231:8254 VCC.verifier <> continuation_obligations def
R8259:8259 VCC.verifier <> k var
R8266:8270 VCC.Semantics <> GKseq constr
R8318:8348 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8408:8408 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8287:8308 VCC.verifier <> gstatement_obligations def
R8310:8312 VCC.verifier <> phi var
R8349:8372 VCC.verifier <> continuation_obligations def
R8375:8394 VCC.verifier <> strongest_post_ghost def
R8396:8398 VCC.verifier <> phi var
prf 8559:8574 <> forall_exists_if
R8595:8598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8594:8594 VCC.verifier <> A var
R8610:8610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8631:8635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8636:8636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8650:8655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8669:8669 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8656:8662 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8664:8665 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8666:8666 VCC.verifier <> Q var
R8668:8668 VCC.verifier <> x var
R8637:8643 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8645:8646 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8647:8647 VCC.verifier <> P var
R8649:8649 VCC.verifier <> x var
R8624:8627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8628:8628 VCC.verifier <> Q var
R8630:8630 VCC.verifier <> x var
R8621:8621 VCC.verifier <> P var
R8623:8623 VCC.verifier <> x var
prf 8702:8714 <> forall_and_if
R8749:8749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8757:8761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8762:8762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8770:8774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8775:8775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8782:8787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8796:8796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8790:8793 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8788:8789 VCC.verifier <> A' var
R8794:8795 VCC.verifier <> B' var
R8777:8780 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8776:8776 VCC.verifier <> A var
R8781:8781 VCC.verifier <> B var
R8764:8767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8768:8769 VCC.verifier <> B' var
R8763:8763 VCC.verifier <> B var
R8751:8754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8755:8756 VCC.verifier <> A' var
R8750:8750 VCC.verifier <> A var
R8954:8957 Coq.Init.Logic <> :type_scope:'~'_x not
R8964:8965 Coq.Init.Logic <> :type_scope:'~'_x not
R8959:8962 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8954:8957 Coq.Init.Logic <> :type_scope:'~'_x not
R8964:8965 Coq.Init.Logic <> :type_scope:'~'_x not
R8959:8962 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8998:9022 Coq.Logic.Classical_Prop <> not_or_and thm
R9187:9196 Coq.MSets.MSetPositive PositiveSet union_spec thm
R9228:9241 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R9396:9405 Coq.MSets.MSetPositive PositiveSet union_spec thm
R9437:9461 Coq.Logic.Classical_Prop <> and_not_or thm
R9497:9510 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R9664:9667 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R9651:9659 VCC.AssertionSemantics <> fresh_var def
R9664:9667 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R9651:9659 VCC.AssertionSemantics <> fresh_var def
R9723:9736 VCC.AssertionSemantics <> fresh_var_spec thm
R10036:10037 Coq.Init.Logic <> :type_scope:'~'_x not
R10038:10044 VCC.Expressions PSet In def
R10047:10055 VCC.AssertionSemantics <> fresh_var def
R10036:10037 Coq.Init.Logic <> :type_scope:'~'_x not
R10038:10044 VCC.Expressions PSet In def
R10047:10055 VCC.AssertionSemantics <> fresh_var def
R10121:10134 VCC.AssertionSemantics <> fresh_var_spec thm
R10364:10373 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R10406:10419 Coq.MSets.MSetPositive PositiveSet singleton_spec thm
R10472:10485 VCC.AssertionSemantics <> fresh_var_spec thm
R10687:10689 Coq.Init.Logic <> :type_scope:x_'='_x not
R10679:10682 VCC.Environment <> find def
R10687:10689 Coq.Init.Logic <> :type_scope:x_'='_x not
R10679:10682 VCC.Environment <> find def
R10798:10800 Coq.Init.Logic <> :type_scope:x_'='_x not
R10790:10793 VCC.Environment <> find def
R10801:10804 Coq.Init.Datatypes <> Some constr
R10798:10800 Coq.Init.Logic <> :type_scope:x_'='_x not
R10790:10793 VCC.Environment <> find def
R10801:10804 Coq.Init.Datatypes <> Some constr
R10850:10852 VCC.Environment <> gss thm
R10869:10871 VCC.Environment <> gso thm
R10728:10730 VCC.Environment <> gss thm
R10742:10744 VCC.Environment <> gso thm
R11039:11057 VCC.Expressions <> free_vars_env_equiv thm
R11139:11157 VCC.Expressions <> free_vars_env_equiv thm
R11258:11267 VCC.Expressions <> eval_gexpr def
R11258:11267 VCC.Expressions <> eval_gexpr def
R11382:11393 VCC.Expressions <> eval_glvalue def
R11382:11393 VCC.Expressions <> eval_glvalue def
R11508:11517 VCC.Expressions <> eval_gexpr def
R11508:11517 VCC.Expressions <> eval_gexpr def
R11643:11654 VCC.Expressions <> eval_glvalue def
R11643:11654 VCC.Expressions <> eval_glvalue def
R11718:11736 VCC.Expressions <> free_vars_env_equiv thm
R11581:11599 VCC.Expressions <> free_vars_env_equiv thm
R11451:11469 VCC.Expressions <> free_vars_env_equiv thm
R11324:11342 VCC.Expressions <> free_vars_env_equiv thm
R11914:11924 VCC.AssertionSemantics <> eval_assert def
R11914:11924 VCC.AssertionSemantics <> eval_assert def
R12034:12044 VCC.AssertionSemantics <> eval_assert def
R12034:12044 VCC.AssertionSemantics <> eval_assert def
R12096:12121 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
R11971:11996 VCC.AssertionSemantics <> free_vars_env_equiv_assert thm
prf 12169:12192 <> eval_statement_weakening
R12216:12223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12252:12256 VCC.AssertionSemantics <> ::x_'||='_x not
R12234:12247 VCC.verifier <> strongest_post def
R12251:12251 VCC.verifier <> s var
R12249:12249 VCC.verifier <> Q var
R12257:12270 VCC.verifier <> strongest_post def
R12274:12274 VCC.verifier <> s var
R12272:12272 VCC.verifier <> P var
R12210:12214 VCC.AssertionSemantics <> ::x_'||='_x not
R12209:12209 VCC.verifier <> Q var
R12215:12215 VCC.verifier <> P var
R12393:12412 VCC.AssertionSemantics <> fresh_vars_spec_util thm
R12393:12412 VCC.AssertionSemantics <> fresh_vars_spec_util thm
R12446:12465 VCC.AssertionSemantics <> fresh_vars_spec_util thm
R12446:12465 VCC.AssertionSemantics <> fresh_vars_spec_util thm
R12499:12507 VCC.AssertionSemantics <> fresh_var def
R12510:12514 Coq.MSets.MSetPositive PositiveSet union def
R12531:12539 Coq.MSets.MSetPositive PositiveSet singleton def
R12517:12525 VCC.AssertionSemantics <> free_vars def
R12499:12507 VCC.AssertionSemantics <> fresh_var def
R12510:12514 Coq.MSets.MSetPositive PositiveSet union def
R12531:12539 Coq.MSets.MSetPositive PositiveSet singleton def
R12517:12525 VCC.AssertionSemantics <> free_vars def
R12569:12577 VCC.AssertionSemantics <> fresh_var def
R12580:12584 Coq.MSets.MSetPositive PositiveSet union def
R12601:12609 Coq.MSets.MSetPositive PositiveSet singleton def
R12587:12595 VCC.AssertionSemantics <> free_vars def
R12569:12577 VCC.AssertionSemantics <> fresh_var def
R12580:12584 Coq.MSets.MSetPositive PositiveSet union def
R12601:12609 Coq.MSets.MSetPositive PositiveSet singleton def
R12587:12595 VCC.AssertionSemantics <> free_vars def
R12708:12714 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12716:12717 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12708:12714 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12716:12717 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13061:13063 VCC.Environment <> gss thm
R13061:13063 VCC.Environment <> gss thm
R13061:13063 VCC.Environment <> gss thm
R13108:13110 VCC.Environment <> gss thm
R13108:13110 VCC.Environment <> gss thm
R13108:13110 VCC.Environment <> gss thm
R13168:13183 VCC.AssertionSemantics <> free_vars_update thm
R13168:13183 VCC.AssertionSemantics <> free_vars_update thm
R13168:13183 VCC.AssertionSemantics <> free_vars_update thm
R13168:13183 VCC.AssertionSemantics <> free_vars_update thm
R13223:13238 VCC.AssertionSemantics <> free_vars_update thm
R13223:13238 VCC.AssertionSemantics <> free_vars_update thm
R13223:13238 VCC.AssertionSemantics <> free_vars_update thm
R13223:13238 VCC.AssertionSemantics <> free_vars_update thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13384:13399 VCC.verifier <> forall_exists_if thm
R13418:13430 VCC.verifier <> forall_and_if thm
R13770:13772 VCC.Environment <> gss thm
R13783:13785 VCC.Environment <> gss thm
R13770:13772 VCC.Environment <> gss thm
R13770:13772 VCC.Environment <> gss thm
R13783:13785 VCC.Environment <> gss thm
R13783:13785 VCC.Environment <> gss thm
R13856:13858 VCC.Environment <> gss thm
R13869:13871 VCC.Environment <> gss thm
R13856:13858 VCC.Environment <> gss thm
R13856:13858 VCC.Environment <> gss thm
R13869:13871 VCC.Environment <> gss thm
R13869:13871 VCC.Environment <> gss thm
R14067:14070 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14056:14064 VCC.verifier <> bool_true def
R14048:14051 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14037:14045 VCC.verifier <> bool_true def
R14067:14070 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14056:14064 VCC.verifier <> bool_true def
R14048:14051 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14037:14045 VCC.verifier <> bool_true def
R14139:14142 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14127:14136 VCC.verifier <> bool_false def
R14119:14122 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14107:14116 VCC.verifier <> bool_false def
R14139:14142 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14127:14136 VCC.verifier <> bool_false def
R14119:14122 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14107:14116 VCC.verifier <> bool_false def
R14178:14186 VCC.AssertionSemantics <> assertion ind
R14189:14189 VCC.AssertionSemantics <> ::x_'||='_x not
R14196:14202 VCC.AssertionSemantics <> ::x_'||='_x not
R14209:14209 VCC.AssertionSemantics <> ::x_'||='_x not
R14191:14194 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14190:14190 VCC.verifier <> K var
R14204:14207 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14203:14203 VCC.verifier <> K var
R14178:14186 VCC.AssertionSemantics <> assertion ind
R14189:14189 VCC.AssertionSemantics <> ::x_'||='_x not
R14196:14202 VCC.AssertionSemantics <> ::x_'||='_x not
R14209:14209 VCC.AssertionSemantics <> ::x_'||='_x not
R14191:14194 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14190:14190 VCC.verifier <> K var
R14204:14207 VCC.AssertionSemantics <> :assert_scope:x_'/\'_x not
R14203:14203 VCC.verifier <> K var
